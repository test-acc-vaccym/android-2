ExpandableListView 可扩展的ListView  ListView   AbsListView

系统优化：（垃圾清理的功能）
1 /data/data/cn.itcast.mobilesafe/cache  应用自身的缓存目录
2 sdcard下面的缓存 

mCacheSize = (TextView) findViewById(R.id.cache_size_text);
mCacheSize.setText(getSizeStr(mAppEntry.cacheSize));
 mPm.getPackageSizeInfo(mCurComputingSizePkg, mStatsObserver);
分析mAppEntry.cacheSize 是怎么赋值的。
09-19 02:30:58.865: INFO/i(2594): android.content.pm.IPackageStatsObserver

09-19 02:41:06.515: WARN/System.err(2868): Caused by: java.lang.SecurityException: Neither user 10048 nor current process has android.permission.GET_PACKAGE_SIZE.

09-19 02:52:17.654: WARN/System.err(3197): Caused by: java.lang.SecurityException: Neither user 10048 nor current process has android.permission.DELETE_CACHE_FILES.

09-19 02:53:08.164: WARN/System.err(3245): Caused by: java.lang.SecurityException: Neither user 10048 nor current process has android.permission.DELETE_CACHE_FILES.


要求：
1 该应用程序必须用户系统的uid
2 该应用程序还必须拥有系统应用程序的签名

代码的混淆
好处：
1 防止反编译  
2 可以压缩代码大小 
  class FilePathParserUtils   c 
  method  getFileNameByStartIndex(int index)  f  

adt  1.0 混淆去自己处理    adt的升级 加入了混淆工具  progurad  

-optimizationpasses 5   压缩的级别
-dontusemixedcaseclassnames   Ab  Fe    A      a  adb  adc 不使用大小写混合
-dontskipnonpubliclibraryclasses  三方.jar  
-dontpreverify  要不要使用预校验
-verbose   在混淆的时候是否记录日志
-optimizations !code/simplification/arithmetic,!field/*,!class/merging/*   压缩的算法  

保持那些类不被混淆  四大组件都不能被混淆
-keep public class * extends android.app.Activity
-keep public class * extends android.app.Application
-keep public class * extends android.app.Service
-keep public class * extends android.content.BroadcastReceiver
-keep public class * extends android.content.ContentProvider
-keep public class * extends android.app.backup.BackupAgentHelper
-keep public class * extends android.preference.Preference
-keep public class com.android.vending.licensing.ILicensingService

-keepclasseswithmembernames class * {
    native <methods>;   jni  java nativew interface 
}


自定义控件也不能被混淆
-keepclasseswithmembers class * {
    public <init>(android.content.Context, android.util.AttributeSet);
}

-keepclasseswithmembers class * {
    public <init>(android.content.Context, android.util.AttributeSet, int);
}

-keepclassmembers class * extends android.app.Activity {
   public void *(android.view.View);
}

枚举  
-keepclassmembers enum * {
    public static **[] values();
    public static ** valueOf(java.lang.String);
}

-keep class * implements android.os.Parcelable {
  public static final android.os.Parcelable$Creator *;
}

-keep class MD5

proguard.ParseException: Unknown option 'and' in argument number 9


日志管理：一般的产品上线  ：  屏蔽日志  
写一个类 对所有的日志方法进行再次包装  

广告：  
广告商 ：有米  万普  芒果 中国移动  
展示量  ： 1500  2毛   点击 ： 1毛 
广告墙  ：背景   积分  100   1毛 
有一张银联的卡 
100 

推送三次不同的广告给你。
3  8 

admob  google    
airpush   

1500  2美金  
必须有一张非大陆的信用卡   paypal   35美金/笔   国际的的支付宝  eBay  

聚合广告平台 ：
4   1   3   2 1 

广告商  开发者  用户 
第一步：
在有米网站上进行注册：
就你的应用去申请 key secret   :唯一的标示是你开发的应用 ：
应用的图  应用的名称  应用的简介  150  子  三张  软件的截图    你的应用还需要被官方审核 


添加广告 ：
1 预留广告位  ：MainActivity


测试：
1 黑盒测试    测试我们编写的测试代码   6k 4 -5k 3k 
2 白盒测试    必须对软件内部的结构非常的熟悉（程序员）   30w      
3 cts测试（针对手机厂商  pad   ）  google程序编写的一套测试case    

j2ee  android客户端：先完成产品  再测试。
1 单元测试  junit  (程序员自己完成)
2 集成测试  整个系统来测试
3 回归测试 （反复测试）


系统级别的开发 
1 先把硬件测试完成  
2 系统开发  
  2.1 linux 内核 
  2.2 framework  移植  添加一个方法和参数   在adil文件里面添加一个方法和参数  
  2.3 应用层的开发 

接口：先自己写一个模拟的数据  


自动化测试：lenovo   htc   sumsung   
robotium  :自动化测试工具       托管在googlecode    
记事本 ：

项目经理：  15/8/3    5 - 7  模块  （contact phone file synccontact sms  contactProvider  TelePhoneyprovider ）
小组长：  4 - 5   
程序员：  

MMI:功能需求文档   
GUI:界面设置文档 




手机卫士：
1.5月  / 2月   4 四个人     一期产品  升级 （功能的添加）  

1 对需求  2周的时间 / 1周的时间
2 开发   1 月  1.5月 
3 测试    1个星期  

你公司的bug是怎么管理的：
excel  :
bugzola  :lenovo  索爱   sony  

git  :版本控制工具 (细粒度的控制)  svn  cvs  :









