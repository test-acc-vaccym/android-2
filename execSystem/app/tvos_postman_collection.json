{
	"id": "e9a2730e-1f38-216b-4be8-9a59b35d1463",
	"name": "tvos_online",
	"description": "http://tvosepg.hifuntv.com",
	"order": [
		"46355688-bb06-62a0-efc1-e25191281588",
		"e13d13ec-2453-e659-59c1-3d4141d1178e",
		"df3437b3-13af-1e41-342d-c69599f76111",
		"0100b0ea-235b-e7a4-4b26-8c64a2b12e37",
		"d5271e00-9c7d-cbdd-1788-e6ee3c982004",
		"531d9d3e-4b09-958e-2132-06dfa7932240",
		"94a1054c-3d22-c992-ca46-2a6cc9d89a24",
		"58c357c8-97d5-a5d0-0441-18c11a995b44",
		"256894cf-46fe-9872-ea39-c511484b250f",
		"82f91d6f-6c9a-5d3f-951f-8370fefda26c",
		"2de0f463-6871-4e2b-bcc9-fe3b04a89f98",
		"bca0f684-0e16-2e6d-fd71-5ac95446cb7e",
		"d6bb96ca-43fb-ad13-1109-f370d662d75a",
		"c76c4dd3-d964-2e34-70d5-8e0dea3ffa33",
		"d7f65981-33ed-4155-1884-cd341e94a2d0",
		"c7bd2b4e-69e2-9032-eab0-e3c7966982e3",
		"2bdb304a-4ee2-5d00-c959-a41389b27e8d",
		"62d573ae-2a87-00ec-9d2e-82b5ae4ea3c9",
		"cdb9daca-7eaf-f61d-f39e-3b5db2676646",
		"014b551e-f33c-87fd-8552-805b3445b91c",
		"6b58b5ed-c783-8566-91f0-f62cf617e583",
		"48987436-5704-fb8e-4926-467d1feb9a85",
		"442df32f-6427-825e-0c6f-200c75dc78c5",
		"73478653-9439-bb47-04a8-961370ec2756",
		"6f870cb8-a529-d8b2-f53b-5f905fb72f21",
		"e685797b-9ff3-eaea-7078-4241ad8c3566",
		"d2507579-450f-0441-8802-6d33d00d35da"
	],
	"folders": [],
	"timestamp": 1480994264282,
	"owner": 0,
	"public": false,
	"requests": [
		{
			"id": "0100b0ea-235b-e7a4-4b26-8c64a2b12e37",
			"headers": "",
			"url": "http://{{HOST}}/v1/epg/turnplay/getLivePlayBill?channel_id=1194&mac_id=00-66-CE-02-E8-2D&net_id=&device_id=ZgOOgo5MjkyOTA2qvwUOS0t2O5V8dg2qIL8gO3u0qnZ7BQ4gmQWqBgaZO6qVlQZ2tKoOjkyOTI5MZgOOgg%3D%3D&&version=4.6.9.200.2.MG.0.0_Pre_Release&uuid=cd9af89b2b2c475b9e379ace3a678547&buss_id=1&license=ZgOOgo5MjkyOTA60SyB8DbSqIKp7eyB8vwVLhzuZdpUGDgWHtL8ge0sOIAa0DnyZBnYNjkyOTI5MZgOOgg%3D%3D",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "var zeroize = function (value, length) {        \n    if (!length) length = 2;        \n    value = String(value);        \n    for (var i = 0, zeros = ''; i < (length - value.length); i++) {\n        zeros += '0';\n    }     \n    return zeros + value;\n};\n\nfunction GetDateStr(AddDayCount) {\n    var dd = new Date();\n    dd.setDate(dd.getDate()+AddDayCount);//获取AddDayCount天后的日期\n    var y = dd.getFullYear();\n    var m = dd.getMonth()+1;//获取当前月份的日期\n    var d = dd.getDate();\n    return y+\"\"+zeroize(m)+\"\"+zeroize(d);\n    // return y+\"-\"+m+\"-\"+d;\n}\n\n\ntests[\"Status code: Code is 200\"] = responseCode.code == 200;\nvar contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");\ntests[\"Has Content-Type\"] = contentTypeHeaderExists;\nif (contentTypeHeaderExists) {\n    tests[\"Content-Type is application/json\"] = \n      responseHeaders[\"Content-Type\"].has(\"application/json\");\n}\nif (responseCode.code == 200){\n    tests[\"response: errno is 0\"] = responseBody.has(\"\\\"errno\\\":\\\"0\\\"\");\n    var resp = JSON.parse(responseBody)\n    tests[\"response: errno is 0\"] = resp.errno == \"0\";\n    //  时间戳\n    var timestamp =  Date.parse(new Date())/1000\n    var sec = postman.getEnvironmentVariable(\"SECONDS\")\n    tests[\"have server_time\"] = resp.server_time <= timestamp + sec && resp.server_time >= timestamp - sec;\n    \n    if (resp.errno == \"0\"){\n        tests[\"response: can_play is 1\"] = responseBody.has(\"\\\"can_play\\\":\\\"1\");\n        tests[\"timezone is 8\"] = resp.data.timezone == \"8\";\n        tests[\"channel_id is 1194\"] = resp.data.channel_id == \"1194\";\n        \n        if (!resp.data.day && typeof( resp.data.day) !== \"undefined\" &&  resp.data.day !== 0){\n            tests[\"day is not null\"] = resp.data.day;\n        } else{\n            tests[\"day has yesterday\"] = resp.data.day[0].day == GetDateStr(-1);\n            tests[\"day has today\"] = resp.data.day[1].day == GetDateStr(0);\n        }\n    }\n}\n// postman.setEnvironmentVariable(\"yesterday\", GetDateStr(0));\n// postman.clearEnvironmentVariable(\"yesterday\");\n//postman.setEnvironmentVariable(\"timestamp\", timestamp);\n//postman.setEnvironmentVariable(\"newdate\", newdate);\n//postman.clearEnvironmentVariable(\"newdate\");\n//postman.clearEnvironmentVariable(\"newdatestr\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484197319239,
			"name": "获取节目单 1194  频道 ",
			"description": "获取节目单 1194  频道 \nhttp://tvosepg.hifuntv.com/v1/epg/turnplay/getLivePlayBill?channel_id=1194&mac_id=00-66-CE-02-E8-2D&net_id=&device_id=ZgOOgo5MjkyOTA2qvwUOS0t2O5V8dg2qIL8gO3u0qnZ7BQ4gmQWqBgaZO6qVlQZ2tKoOjkyOTI5MZgOOgg%3D%3D&&version=4.6.9.200.2.MG.0.0_Pre_Release&uuid=cd9af89b2b2c475b9e379ace3a678547&buss_id=1&license=ZgOOgo5MjkyOTA60SyB8DbSqIKp7eyB8vwVLhzuZdpUGDgWHtL8ge0sOIAa0DnyZBnYNjkyOTI5MZgOOgg%3D%3D",
			"collectionId": "e9a2730e-1f38-216b-4be8-9a59b35d1463"
		},
		{
			"id": "014b551e-f33c-87fd-8552-805b3445b91c",
			"headers": "",
			"url": "http://{{HOST}}/v1/epg/getVodPlayUrl?index_import_id=3633412&video_index=1&buss_id=1000014&media_asset_id=1&category_id=1&video_id=60adf14f4736be23eca7ba5575c02c85&index_id=43ba31c98207a06c5fb6a16f9f709c11&video_import_id=1&device_id=95d654927d47c6da82b6b6695d9f1a3d2ab40a52&license=ZgOOgo5MjkyOTA2HeyCHtA1LBXu0BTsge5V8S5kgmSAgDYd7Db8Olap7S5WZtAaVh0uqjkyOTI5MZgOOgg%3D%3D&m3u8=2&mac_id=00-66-CE-02-40-69&net_id=&part_id=3633412&platform=3&preview=0&quality=hd&ticket=&type=3&uuid=c0969ad624812e131ed2026cf31aa50f&version=5.0.008.200.2.MG.0.0_Pre_Release",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code: Code is 200\"] = responseCode.code == 200;\nvar contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");\ntests[\"Has Content-Type\"] = contentTypeHeaderExists;\nif (contentTypeHeaderExists) {\n    tests[\"Content-Type is application/json\"] = \n      responseHeaders[\"Content-Type\"].has(\"application/json\");\n}\nif (responseCode.code == 200){\n    var resp = JSON.parse(responseBody)\n    tests[\"response: errno is 0\"] = resp.errno == \"0\";\n    //  时间戳\n    var timestamp =  Date.parse(new Date())/1000\n    var sec = postman.getEnvironmentVariable(\"SECONDS\")\n    tests[\"have server_time\"] = resp.server_time <= timestamp + sec && resp.server_time >= timestamp - sec;\n}\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484195980270,
			"name": "TVOS点播VIP片源NoTicket ",
			"description": "TVOS点播\nhttp://tvosepg.hifuntv.com/v1/epg/getVodPlayUrl?index_import_id=3633412&video_index=1&buss_id=1000014&media_asset_id=1&category_id=1&video_id=60adf14f4736be23eca7ba5575c02c85&index_id=43ba31c98207a06c5fb6a16f9f709c11&video_import_id=1&device_id=95d654927d47c6da82b6b6695d9f1a3d2ab40a52&license=ZgOOgo5MjkyOTA2HeyCHtA1LBXu0BTsge5V8S5kgmSAgDYd7Db8Olap7S5WZtAaVh0uqjkyOTI5MZgOOgg%3D%3D&m3u8=2&mac_id=00-66-CE-02-40-69&net_id=&part_id=3633412&platform=3&preview=0&quality=hd&svrip=&ticket=&type=3&uuid=c0969ad624812e131ed2026cf31aa50f&version=5.0.008.200.2.MG.0.0_Pre_Release",
			"collectionId": "e9a2730e-1f38-216b-4be8-9a59b35d1463"
		},
		{
			"id": "256894cf-46fe-9872-ea39-c511484b250f",
			"headers": "",
			"url": "http://{{HOST}}/v1/epg/turnplay/getLivePlayUrlMPP?channel_id=911&mac_id=00-66-CE-02-E8-2D&device_id=ZgOOgo5MjkyOTA2qvwUOS0t2O5V8dg2qIL8gO3u0qnZ7BQ4gmQWqBgaZO6qVlQZ2tKoOjkyOTI5MZgOOgg%3D%3D&version=4.6.9.200.2.MG.0.0_Pre_Release&uuid=cd9af89b2b2c475b9e379ace3a678547&buss_id=1&license=ZgOOgo5MjkyOTA60SyB8DbSqIKp7eyB8vwVLhzuZdpUGDgWHtL8ge0sOIAa0DnyZBnYNjkyOTI5MZgOOgg%3D%3D&definition=std",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code: Code is 200\"] = responseCode.code == 200;\nvar contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");\ntests[\"Has Content-Type\"] = contentTypeHeaderExists;\nif (contentTypeHeaderExists) {\n    tests[\"Content-Type is application/json\"] = \n      responseHeaders[\"Content-Type\"].has(\"application/json\");\n}\nif (responseCode.code == 200){\n    tests[\"response: errno is 0\"] = responseBody.has(\"\\\"errno\\\":\\\"0\\\"\");\n    tests[\"response: url is not empty\"] = responseBody.has(\"\\\"url\\\":\\\"http://\");\n    var resp = JSON.parse(responseBody)\n    tests[\"response: errno is 0\"] = resp.errno == \"0\";\n    //  时间戳\n    var timestamp =  Date.parse(new Date())/1000\n    var sec = postman.getEnvironmentVariable(\"SECONDS\")\n    tests[\"have server_time\"] = resp.server_time <= timestamp + sec && resp.server_time >= timestamp - sec;\n    if(resp.errno == \"0\"){\n        tests[\"url is not empty \"] = resp.data.url !== \"\";\n        tests[\"npuk is not empty \"] = resp.data.npuk !== \"\";\n        tests[\"isothercdn is 0 \"] = resp.data.isothercdn == \"0\";\n    }\n}\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484196327876,
			"name": " 直播 古装偶像  MPP",
			"description": " 直播 古装偶像  MPP\n http://tvosepg.hifuntv.com/v1/epg/turnplay/getLivePlayUrlMPP?channel_id=911&mac_id=00-66-CE-02-E8-2D&device_id=ZgOOgo5MjkyOTA2qvwUOS0t2O5V8dg2qIL8gO3u0qnZ7BQ4gmQWqBgaZO6qVlQZ2tKoOjkyOTI5MZgOOgg%3D%3D&version=4.6.9.200.2.MG.0.0_Pre_Release&uuid=cd9af89b2b2c475b9e379ace3a678547&buss_id=1&license=ZgOOgo5MjkyOTA60SyB8DbSqIKp7eyB8vwVLhzuZdpUGDgWHtL8ge0sOIAa0DnyZBnYNjkyOTI5MZgOOgg%3D%3D&definition=std\n",
			"collectionId": "e9a2730e-1f38-216b-4be8-9a59b35d1463"
		},
		{
			"id": "2bdb304a-4ee2-5d00-c959-a41389b27e8d",
			"headers": "",
			"url": "http://{{HOST}}/v1/epg/turnplay/getSysTime?mac_id=00-66-CE-02-E8-2D&device_id=ZgOOgo5MjkyOTA2qvwUOS0t2O5V8dg2qIL8gO3u0qnZ7BQ4gmQWqBgaZO6qVlQZ2tKoOjkyOTI5MZgOOgg%3D%3D&version=4.6.9.200.2.MG.0.0_Pre_Release&uuid=cd9af89b2b2c475b9e379ace3a678547&license=ZgOOgo5MjkyOTA60SyB8DbSqIKp7eyB8vwVLhzuZdpUGDgWHtL8ge0sOIAa0DnyZBnYNjkyOTI5MZgOOgg%3D%3D",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"tests": "Date.prototype.pattern=function(fmt) {         \n    var o = {         \n    \"M+\" : this.getMonth()+1, //月份         \n    \"d+\" : this.getDate(), //日         \n    \"h+\" : this.getHours()%12 === 0 ? 12 : this.getHours()%12, //小时         \n    \"H+\" : this.getHours(), //小时         \n    \"m+\" : this.getMinutes(), //分         \n    \"s+\" : this.getSeconds(), //秒         \n    \"q+\" : Math.floor((this.getMonth()+3)/3), //季度         \n    \"S\" : this.getMilliseconds() //毫秒         \n    };         \n    var week = {         \n    \"0\" : \"/u65e5\",         \n    \"1\" : \"/u4e00\",         \n    \"2\" : \"/u4e8c\",         \n    \"3\" : \"/u4e09\",         \n    \"4\" : \"/u56db\",         \n    \"5\" : \"/u4e94\",         \n    \"6\" : \"/u516d\"        \n    };         \n    if(/(y+)/.test(fmt)){         \n        fmt=fmt.replace(RegExp.$1, (this.getFullYear()+\"\").substr(4 - RegExp.$1.length));         \n    }         \n    if(/(E+)/.test(fmt)){         \n        fmt=fmt.replace(RegExp.$1, ((RegExp.$1.length>1) ? (RegExp.$1.length>2 ? \"/u661f/u671f\" : \"/u5468\") : \"\")+week[this.getDay()+\"\"]);         \n    }         \n    for(var k in o){         \n        if(new RegExp(\"(\"+ k +\")\").test(fmt)){         \n            fmt = fmt.replace(RegExp.$1, (RegExp.$1.length==1) ? (o[k]) : ((\"00\"+ o[k]).substr((\"\"+ o[k]).length)));         \n        }         \n    }         \n    return fmt;         \n}  \n\nfunction parseDate(str){   \n  if(typeof str == 'string'){   \n    var results = str.match(/^ *(\\d{4})-(\\d{1,2})-(\\d{1,2}) *$/);   \n    if(results && results.length>3)   \n      return new Date(parseInt(results[1]),parseInt(results[2]) -1,parseInt(results[3]));    \n    results = str.match(/^ *(\\d{4})-(\\d{1,2})-(\\d{1,2}) +(\\d{1,2}):(\\d{1,2}):(\\d{1,2}) *$/);   \n    if(results && results.length>6)   \n      return new Date(parseInt(results[1]),parseInt(results[2]) -1,parseInt(results[3]),parseInt(results[4]),parseInt(results[5]),parseInt(results[6]));    \n    results = str.match(/^ *(\\d{4})-(\\d{1,2})-(\\d{1,2}) +(\\d{1,2}):(\\d{1,2}):(\\d{1,2})\\.(\\d{1,9}) *$/);   \n    if(results && results.length>7)   \n      return new Date(parseInt(results[1]),parseInt(results[2]) -1,parseInt(results[3]),parseInt(results[4]),parseInt(results[5]),parseInt(results[6]),parseInt(results[7])); \n    results = str.match(/^ *(\\d{4})(\\d{2})(\\d{2})T(\\d{2})(\\d{2})(\\d{2}) *$/);\n    if(results && results.length>5)\n        return new Date(parseInt(results[1]),parseInt(results[2]) -1,parseInt(results[3]),parseInt(results[4]),parseInt(results[5]),parseInt(results[6]));\n    \n  }   \n  return null;   \n}  \n\nvar contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");\ntests[\"Has Content-Type\"] = contentTypeHeaderExists;\nif (contentTypeHeaderExists) {\n    tests[\"Content-Type is application/json\"] = \n      responseHeaders[\"Content-Type\"].has(\"application/json\");\n}\n\nif (responseCode.code == 200){\n    tests[\"time is not empty\"] = responseBody.has(\"\\\"time\\\":\")\n    var  resp = JSON.parse(responseBody);\n    var  newdate = (new Date());\n    //   生成字符串比较 \n    // var datetime = newdate.pattern(\"yyyyMMddTHHmmss\");\n    // var datetimezone = datetime + \"+0800\";\n    \n    var t = resp.data.time\n    var year=parseInt(t.substring(0,4))\n    var month=parseInt(t.substring(4,6))\n    var day=parseInt(t.substring(6,8))\n    var hour=parseInt(t.substring(9,11))\n    var minute=parseInt(t.substring(11,13))\n    var second=parseInt(t.substring(13,15))\n    var d= Date.parse(new Date(year,month,day,hour,minute,second))/1000\n    var e = Date.parse(newdate)/1000\n    postman.clearEnvironmentVariable(\"d\");\n    postman.clearEnvironmentVariable(\"e\");\n    var sec = postman.getEnvironmentVariable(\"SECONDS\")\n    tests[\"time is now\"] = d - sec < e < d + sec ;\n    \n    // postman.setEnvironmentVariable(\"time\", datetime);\n    // postman.setEnvironmentVariable(\"datetimezone\", datetimezone);\n    \n    var schema = {\n     \"items\": {\n     \"type\": \"boolean\"\n     }\n    };\n    var data1 = [true, false];\n    // var data2 = [true, 123];\n    \n    tests[\"Valid Data1\"] = tv4.validate(data1, schema);\n    // tests[\"Valid Data2\"] = tv4.validate(data2, schema);\n    console.log(\"Validation failed: \", tv4.error);\n    \n    postman.setEnvironmentVariable(\"variable_key\", \"variable_value\");\n    \n    postman.setGlobalVariable(\"variable_key\", \"variable_value\");\n    \n    var jsonObject = xml2Json(responseBody);\n}\npostman.clearEnvironmentVariable(\"variable_key\");\npostman.clearEnvironmentVariable(\"timestampHeader\");\npostman.clearEnvironmentVariable(\"time\");\npostman.clearEnvironmentVariable(\"datetimezone\");\npostman.clearEnvironmentVariable(\"timestamp\");\npostman.clearGlobalVariable(\"variable_key\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484196152757,
			"name": "获取时间",
			"description": " 获取 获取时间\nhttp://tvosepg.hifuntv.com/v1/epg/turnplay/getSysTime?mac_id=00-66-CE-02-E8-2D&device_id=ZgOOgo5MjkyOTA2qvwUOS0t2O5V8dg2qIL8gO3u0qnZ7BQ4gmQWqBgaZO6qVlQZ2tKoOjkyOTI5MZgOOgg%3D%3D&version=4.6.9.200.2.MG.0.0_Pre_Release&uuid=cd9af89b2b2c475b9e379ace3a678547&license=ZgOOgo5MjkyOTA60SyB8DbSqIKp7eyB8vwVLhzuZdpUGDgWHtL8ge0sOIAa0DnyZBnYNjkyOTI5MZgOOgg%3D%3D",
			"collectionId": "e9a2730e-1f38-216b-4be8-9a59b35d1463",
			"responses": []
		},
		{
			"id": "2de0f463-6871-4e2b-bcc9-fe3b04a89f98",
			"headers": "",
			"url": "http://{{HOST}}/v1/epg/getVodPlayUrl?hash=ec3c8fb7b9103ce4d8f88b3eaeeef063&codec=20082008&pack=AIMAGl-UsuHquFGdZZqDxc0NlLWiac4kIW9x-eSUuZwak2hkpZgcVr1iXXi4VutW8U4lcz5Y7bflH42SSkedGnGYO_OW7tLupPmQbTY4TdzycP5qzk2mw33ei9n9pA7nP5umtjWmHP-OCNk4hLLAuesft4CRpZ-ltU3VbfGzSS6V5Lv7PkBd89EcXM9DpDWUTTO6vkMPmabW0Sk1hlTVaZSZXujrTAiJz8AM0ojE1eAz6lzxvNUGbOsydfWW8gLqKtfKIF1mmIqQW6YwT99yqkb8PQaLnhXxNvVvMsqTDB48EE5DsKm1Uy0oGnnI2FdxXmTxIQQ-pl88x-Q3C22x5I-o0mz3U6YVJYcjdDAmwua0ydzZHmMWSPbsdCtmu58WDCRAcUqEtQZpC-tdWksbRKjKvH8DNGniE7KRDFZrsBb6zF7gcAF1-uwIGRR4ITh8aM-rKddnMhZjlO-FrAUISqD2RwXgtHqfbVHA3EK8-bqqO0oyh9aHeD9PQfe2PVpD9s_ZerfdtyuAxJ8_Qxm2KexMGRJ9zme8PD5TApRtGnRXcybY_Apq6osWBUJaV8fnwLlcFdxXe56apMfBI7zUjaXj3c7IJYd0ttsrifLQiCZC5UPsDDr6UiYU6Lx7fiKpxuhpK9cSxl6cwjqLbTo9fsaflS7vw2QQRD9WucA75RvJXHma_1mstiWUQrXhOj_dfGJ678sSQO9gxsEml0KmksK8i-bmVKKC98Hfd_LJnz9FybAnhx8sAHVMs9zJGf2reblpB4VnP35r0AxAm8FgAXKtlkQzX8Duwu35okPsgj41eYhRmFUdlsUfaCMEJyxlC53l6lRy928a9a7f-OEWFf0j7qCOKenjlVGwKvRoq_BplGlSavwwZjgvrGXb9KvGYc5yDizdjE20hFUuu1nBe9G-dW3axA==",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code: Code is 200\"] = responseCode.code == 200;\nvar contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");\ntests[\"Has Content-Type\"] = contentTypeHeaderExists;\nif (contentTypeHeaderExists) {\n    tests[\"Content-Type is application/json\"] = \n      responseHeaders[\"Content-Type\"].has(\"application/json\");\n}\nif (responseCode.code == 200){\n    var resp = JSON.parse(responseBody)\n    tests[\"response: errno is 2040351\"] = resp.errno == \"2040351\";\n    //  时间戳\n    var timestamp =  Date.parse(new Date())/1000\n    var sec = postman.getEnvironmentVariable(\"SECONDS\")\n    tests[\"have server_time\"] = resp.server_time < timestamp + sec && resp.server_time > timestamp - sec;\n}\n\n//  POST加解密请求数据\nvar xmlhttp;\nfunction verify1() {\n    //确定浏览器\n    if(window.XMLHttpRequest) {\n        //针对FireFox、Mozillar、Opera、Safari、IE7、IE8\n        //创建XMLHttpRequest对象\n        xmlhttp = new XMLHttpRequest();\n        //修正某些浏览器的BUG\n        if(xmlhttp.overrideMimeType) {\n            xmlhttp.overrideMimeType(\"text/html\");\n        }\n    }else if(window.ActiveXObject){\n        //针对IE5、IE5.5、IE6\n        //这两个为插件名称作为参数传递，为了创建ActiveXObject\n        var activeName = [\"MSXML2.XMLHTTP\",\"Microsoft.XMLHTTP\"];\n        for(var i=0;i>activeName.length();i++) {\n              try{\n                  //非别取出，如果创建成功则终止循环，如果失败则会抛出异常继续循环\n                  xmlhttp = new ActiveXObject(activeName[i]);\n                  break;\n              }catch(e){ }\n        }\n    }\n    //确定XMLHttpRequest是否创建成功\n    //注册回调函数\n    xmlhttp.onreadystatechange=callback;\n    url = \"http://10.1.172.95/testBigData/encrypt/index2.php?t=3&action=decodedata\";\n    //设置连接信息\n    //1.是http请求的方式\n    //2.是服务器的地址\n    //3.是采用同步还是异步，true为异步\n    //xmlhttp.open(\"GET\",url,true);\n    //post请求与get请求的区别\n    //第一个参数设置成post第二个只写url地址，第三个不变\n    xmlhttp.open(\"POST\",url,true);\n    //post请求要自己设置请求头\n   xmlhttp.setRequestHeader(\"Accept-Encoding\",\"gzip, deflate\");\n   xmlhttp.setRequestHeader(\"ContentType\",\"text/html;charset=uft-8\");\n   xmlhttp.setRequestHeader(\"Content-Type\",\"application/x-www-form-urlencoded\");\n    //发送数据，开始与服务器进行交互\n    //post发送请求\n    xmlhttp.send(\"nns_codec=\"+\"20082008\"+\"&data=\"+resp.data);\n}\nfunction callback() {\n    //接收响应数据\n    //判断对象状态是否交互完成，如果为4则交互完成\n    if(xmlhttp.readyState == 4) {\n         //判断对象状态是否交互成功,如果成功则为200\n        if(xmlhttp.status == 200) {\n            //接收数据,得到服务器输出的纯文本数据\n            var textarearesult = document.getElementByTagName(\"textarea\");\n            postman.setEnvironmentVariable(\"textarearesult\",textarearesult[2]);\n            alert(textarearesult);\n            var response = xmlhttp.responseText;\n            //得到div的节点将数据显示在div上\n            // divresult.innerHTML = response;\n        }\n    }\n}\n\nfunction stringToHex(str){\n　　　　var val=\"\";\n　　　　for(var i = 0; i < str.length; i+=2){\n　　　　　　if(val === \"\")\n　　　　　　　　val = str.charCodeAt(i,2).toString(10);\n　　　　　　else\n　　　　　　　　val += \",\" + str.charCodeAt(i,2).toString(10);\n　　　　}\n　　　　return val;\n}\nif (resp.data.length > 0) {\n    // base64  解密 \n    var words = CryptoJS.enc.Base64.parse(resp.data);\n    //  base64 加密 \n    // var base64 = CryptoJS.enc.Base64.stringify(words);\n    // var rsaLength = CryptoJS.enc.Hex.parse(rsaLengthStr)\n    var rsaLengthStr = words.toString().substring(0,4)\n    var rsaLengthHex = parseInt(rsaLengthStr,16);\n    var rsaStr =  words.toString().substring(4,4 + rsaLengthHex*2)\n    postman.setEnvironmentVariable(\"rsaStr\",rsaStr);\n    postman.setEnvironmentVariable(\"stringToHexrsaStr\",stringToHex(rsaStr));\n    \n    // postman.clearEnvironmentVariable(\"rsaStr\");\n    postman.clearEnvironmentVariable(\"base64\");\n    postman.clearEnvironmentVariable(\"words\");\n    postman.clearEnvironmentVariable(\"hex\");\n    postman.clearEnvironmentVariable(\"words1\");\n}\n\n// CryptoJS.AES.decrypt(resp.data,\"\")\n\n// tests[\"textarearesult is  not null \"] = resp.data.status == verify1();\n\n// tests[\"ticket_status is normal\"] = resp.data.ticket_status == \"normal\";\n// tests[\"status is 0000\"] = resp.data.status == \"0000\";\n// tests[\"is free\"] = resp.data.isfree == \"true\";\n// tests[\"video_id is be5df7e1f80bfb56f23eca18448177aa\"] = resp.data.video_id == \"be5df7e1f80bfb56f23eca18448177aa\";\n// tests[\"video_import_id is 296224\"] = resp.data.video_import_id == \"296224\";\n// tests[\"index_id is 7ed31ac3f18ae5786490ef60e599bf14\"] = resp.data.index_id == \"7ed31ac3f18ae5786490ef60e599bf14\";\n// tests[\"video_index is 0\"] = resp.data.video_index == \"0\";\n// tests[\"index_import_id is 3633412\"] = resp.data.index_import_id == \"3633412\";\n// tests[\"media_id is db34c0f58d50508e195f967b9d280e32\"] = resp.data.media_id == \"db34c0f58d50508e195f967b9d280e32\";\n// tests[\"media_import_id is 9106325\"] = resp.data.media_import_id == \"9106325\";\n\nfunction encrypt(data, keyJSON){\n    var respdata = new TextEncoder(\"UTF-8\").encode(data);\n    var randomsKeys = geneRandomHexStr(64); // 128 bit keys\n    var encryptedKey = hexStringToUint8Array(randomsKeys);\n    var aesAlgo = {name: 'aes-cbc', iv: hexStringToUint8Array(\"000102030405060708090a0b0c0d0e0f\")};\n    return crypto.subtle.importKey(\"jwk\", keyJSON, {name: \"rsa-oaep\", hash: {name: \"sha-256\"}},true, ['encrypt'])\n        .then(function(publicKey){\n            return crypto.subtle.encrypt({name: \"rsa-oaep\"}, publicKey, encryptedKey);\n        }).then(function(res){\n            encryptedKey = bytesToHexString(res)\n            // use aes to encrypt data\n            // import aes key\n            return crypto.subtle.importKey('raw', \n                hexStringToUint8Array(randomsKeys) , aesAlgo, false, ['encrypt', 'decrypt']);\n             \n        }).then(function(result){\n            // use aes to encode\n            return crypto.subtle.encrypt(aesAlgo,\n             result, respdata);\n        }).then(function(encryptedData){\n            return Promise.resolve({\n                'encrypted': bytesToHexString(encryptedData),\n                'encryptedKey': encryptedKey,\n            });\n        });\n\n    //console.log(new TextDecoder(\"UTF-8\").decode(data));\n    // use server public key to encrypt   \n }\n \nfunction decrypt(data, keyJSON){\n    // use local private key to decrypt\n    var encryptedKey = new hexStringToUint8Array(data.encryptedKey);\n    var encryptedData = new hexStringToUint8Array(data.encrypted);\n    var aesAlgo = {name: 'aes-cbc', iv: hexStringToUint8Array(\"000102030405060708090a0b0c0d0e0f\")};\n    // decrypt key\n    return crypto.subtle.importKey('jwk', keyJSON, {name: \"rsa-oaep\", hash: {name: \"sha-256\"}}, true,\n        ['decrypt']).then(function(privateKey){\n            return crypto.subtle.decrypt({name: 'rsa-oaep'}, privateKey, encryptedKey);\n        }).then(function(decryptedKey){\n            // import aes key\n            return crypto.subtle.importKey('raw', \n                decryptedKey, aesAlgo, false, ['encrypt', 'decrypt']);\n        }).catch(function(){\n            console.error(\"decrypt error\");\n        }).then(function(result){\n            // decode encrypted data\n            return crypto.subtle.decrypt(aesAlgo, result, encryptedData);\n        }).then(function(data){\n            return Promise.resolve(new TextDecoder(\"UTF-8\").decode(new Uint8Array(data)));\n        })\n\n}\n\nfunction createNewUserKey(){\n    var algorithmKeyGen = {\n        name: \"RSA-OAEP\",\n        hash: {name: \"sha-256\"},\n        // RsaKeyGenParams\n        modulusLength: 2048,\n        publicExponent: new Uint8Array([0x01, 0x00, 0x01]),  // Equivalent to 65537\n    };\n    var nonExtractable = false;\n     \n    var publicKey = \"\";\n    var privateKey = \"\";\n    var keyPairs = \"\";\n    return crypto.subtle.generateKey(algorithmKeyGen, true, ['encrypt', 'decrypt']).then(function(result) {\n        // gene key pair\n        keyPairs = result;\n        return Promise.all([crypto.subtle.exportKey(\"jwk\", keyPairs.publicKey),\n            crypto.subtle.exportKey(\"jwk\", keyPairs.privateKey)]);\n    })\n     \n}\n\nfunction _arrayBufferToBase64( buffer ) {\n    var binary = '';\n    var bytes = new Uint8Array( buffer );\n    var len = bytes.byteLength;\n    for (var i = 0; i < len; i++) {\n    binary += String.fromCharCode( bytes[ i ] );\n    }\nreturn window.btoa(binary);\n}\n\nfunction hexStringToUint8Array(hexString) {\n    if (hexString.length % 2 != 0)\n        throw \"Invalid hexString\";\n    var arrayBuffer = new Uint8Array(hexString.length / 2);\n    for (var i = 0; i < hexString.length; i += 2) {\n        var byteValue = parseInt(hexString.substr(i, 2), 16);\n        if (byteValue == NaN)\n            throw \"Invalid hexString\";\n        arrayBuffer[i/2] = byteValue;\n    }\n    return arrayBuffer;\n}\n\nfunction bytesToHexString(bytes) {\n    if (!bytes)\n        return null;\n    bytes = new Uint8Array(bytes);\n    var hexBytes = [];\n    for (var i = 0; i < bytes.length; ++i) {\n        var byteString = bytes[i].toString(16);\n        if (byteString.length < 2)\n            byteString = \"0\" + byteString;\n        hexBytes.push(byteString);\n    }\n    return hexBytes.join(\"\");\n}\n\nfunction geneRandomHexStr(length){\n    var text = \"\";\n    var possible = \"0123456789abcdef\";\n\n    for( var i=0; i < length; i++ )\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n\n    return text;\n}\n\ncreateNewUserKey().then(function(keyPairs){\n    encrypt(\"this is origin text\", keyPairs[0]).then(function(res){\n        console.log('public', JSON.stringify(keyPairs[0]));\n        console.log('private', JSON.stringify(keyPairs[1]));\n        decrypt(res, keyPairs[1]).then(function(decrypted){\n            console.log('decrypted', decrypted);\n        });\n    });\n})\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484196279276,
			"name": "TVOS点播 加密",
			"description": "TVOS点播\nhttp://tvosepg.hifuntv.com/v1/epg/getVodPlayUrl?hash=ec3c8fb7b9103ce4d8f88b3eaeeef063&codec=20082008&pack=AIMAGl-UsuHquFGdZZqDxc0NlLWiac4kIW9x-eSUuZwak2hkpZgcVr1iXXi4VutW8U4lcz5Y7bflH42SSkedGnGYO_OW7tLupPmQbTY4TdzycP5qzk2mw33ei9n9pA7nP5umtjWmHP-OCNk4hLLAuesft4CRpZ-ltU3VbfGzSS6V5Lv7PkBd89EcXM9DpDWUTTO6vkMPmabW0Sk1hlTVaZSZXujrTAiJz8AM0ojE1eAz6lzxvNUGbOsydfWW8gLqKtfKIF1mmIqQW6YwT99yqkb8PQaLnhXxNvVvMsqTDB48EE5DsKm1Uy0oGnnI2FdxXmTxIQQ-pl88x-Q3C22x5I-o0mz3U6YVJYcjdDAmwua0ydzZHmMWSPbsdCtmu58WDCRAcUqEtQZpC-tdWksbRKjKvH8DNGniE7KRDFZrsBb6zF7gcAF1-uwIGRR4ITh8aM-rKddnMhZjlO-FrAUISqD2RwXgtHqfbVHA3EK8-bqqO0oyh9aHeD9PQfe2PVpD9s_ZerfdtyuAxJ8_Qxm2KexMGRJ9zme8PD5TApRtGnRXcybY_Apq6osWBUJaV8fnwLlcFdxXe56apMfBI7zUjaXj3c7IJYd0ttsrifLQiCZC5UPsDDr6UiYU6Lx7fiKpxuhpK9cSxl6cwjqLbTo9fsaflS7vw2QQRD9WucA75RvJXHma_1mstiWUQrXhOj_dfGJ678sSQO9gxsEml0KmksK8i-bmVKKC98Hfd_LJnz9FybAnhx8sAHVMs9zJGf2reblpB4VnP35r0AxAm8FgAXKtlkQzX8Duwu35okPsgj41eYhRmFUdlsUfaCMEJyxlC53l6lRy928a9a7f-OEWFf0j7qCOKenjlVGwKvRoq_BplGlSavwwZjgvrGXb9KvGYc5yDizdjE20hFUuu1nBe9G-dW3axA==",
			"collectionId": "e9a2730e-1f38-216b-4be8-9a59b35d1463"
		},
		{
			"id": "442df32f-6427-825e-0c6f-200c75dc78c5",
			"headers": "",
			"url": "http://{{HOST}}/v1/epg/turnplay/getLiveActivityDetailChannelInfos?version=PCweb_1.0&platform=2&activity_id=1000064&buss_id=2000001",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code: Code is 200\"] = responseCode.code == 200;\nif (responseCode.code == 200){\n    var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");\n    tests[\"Has Content-Type\"] = contentTypeHeaderExists;\n    if (contentTypeHeaderExists) {\n        tests[\"Content-Type is application/json\"] = \n          responseHeaders[\"Content-Type\"].has(\"application/json\");\n    }\n    var resp = JSON.parse(responseBody)\n    tests[\"response: errno is 0\"] = resp.errno == \"0\";\n    //  时间戳\n    var timestamp =  Date.parse(new Date())/1000\n    var sec = postman.getEnvironmentVariable(\"SECONDS\")\n    tests[\"have server_time\"] = resp.server_time <= timestamp + sec && resp.server_time >= timestamp - sec;\n    \n    tests[\"response: id is 1000064\"] = resp.data.activity_info.id == \"1000064\";\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484195609954,
			"name": "直播活动详情页",
			"description": "http://tvosepg.hifuntv.com/v1/epg/turnplay/getLiveActivityDetailChannelInfos?version=PCweb_1.0&platform=2&activity_id=1000064&buss_id=2000001",
			"collectionId": "e9a2730e-1f38-216b-4be8-9a59b35d1463",
			"responses": []
		},
		{
			"id": "46355688-bb06-62a0-efc1-e25191281588",
			"headers": "",
			"url": "http://{{HOST}}/v1/epg5/getVodPlayUrl?part_id=1746514&mac_id=00-66-CE-02-E8-2D&device_id=ZgOOgo5MjkyOTA2qvwUOS0t2O5V8dg2qIL8gO3u0qnZ7BQ4gmQWqBgaZO6qVlQZ2tKoOjkyOTI5MZgOOgg%3D%3D&version=4.6.9.200.2.MG.0.0_Pre_Release&uuid=cd9af89b2b2c475b9e379ace3a678547&license=ZgOOgo5MjkyOTA60SyB8DbSqIKp7eyB8vwVLhzuZdpUGDgWHtL8ge0sOIAa0DnyZBnYNjkyOTI5MZgOOgg%3D%3D&dcp_id=2&quality=1&quality=1",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code: Code is 200\"] = responseCode.code == 200;\nvar contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");\ntests[\"Has Content-Type\"] = contentTypeHeaderExists;\nif (contentTypeHeaderExists) {\n    tests[\"Content-Type is application/json\"] = \n      responseHeaders[\"Content-Type\"].has(\"application/json\");\n}\nif (responseCode.code == 200){\n    tests[\"response: errno is 0\"] = responseBody.has(\"\\\"errno\\\":\\\"0\\\"\");\n    var resp = JSON.parse(responseBody)\n    tests[\"response: errno is 0\"] = resp.errno == \"0\";\n    //  时间戳\n    var timestamp =  Date.parse(new Date())/1000\n    var sec = postman.getEnvironmentVariable(\"SECONDS\")\n    tests[\"have server_time\"] = resp.server_time <= timestamp + sec && resp.server_time >= timestamp - sec;\n    \n    if (resp.errno == \"0\"){\n        tests[\"is not other cdn\"] = resp.data.isothercdn !== \"\"\n        tests[\"response: url is not empty\"] = responseBody.has(\"\\\"url\\\":\\\"http://\");\n    }\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484196928824,
			"name": "点播取串：分分钟追剧",
			"description": "点播取串：分分钟追剧\n\nhttp://tvosepg.hifuntv.com/v1/epg5/getVodPlayUrl?part_id=1746514&mac_id=00-66-CE-02-E8-2D&device_id=ZgOOgo5MjkyOTA2qvwUOS0t2O5V8dg2qIL8gO3u0qnZ7BQ4gmQWqBgaZO6qVlQZ2tKoOjkyOTI5MZgOOgg%3D%3D&version=4.6.9.200.2.MG.0.0_Pre_Release&uuid=cd9af89b2b2c475b9e379ace3a678547&license=ZgOOgo5MjkyOTA60SyB8DbSqIKp7eyB8vwVLhzuZdpUGDgWHtL8ge0sOIAa0DnyZBnYNjkyOTI5MZgOOgg%3D%3D&dcp_id=2&quality=1&quality=1",
			"collectionId": "e9a2730e-1f38-216b-4be8-9a59b35d1463"
		},
		{
			"id": "48987436-5704-fb8e-4926-467d1feb9a85",
			"headers": "",
			"url": "http://{{HOST}}/v1/epg/getVodPlayUrl?index_import_id=478228&video_index=1&buss_id=1000014&media_asset_id=1&category_id=1&video_id=cbda6b4755cc241a8ce8d9eaf3d3fde6&index_id=00002719166bba229ce498be1e3aa40b&video_import_id=1&device_id=95d654927d47c6da82b6b6695d9f1a3d2ab40a52&license=ZgOOgo5MjkyOTA2HeyCHtA1LBXu0BTsge5V8S5kgmSAgDYd7Db8Olap7S5WZtAaVh0uqjkyOTI5MZgOOgg%3D%3D&m3u8=2&mac_id=00-66-CE-02-40-69&net_id=&part_id=478228&platform=3&preview=0&quality=hd&ticket=&type=3&uuid=c0969ad624812e131ed2026cf31aa50f&version=5.0.008.200.2.MG.0.0_Pre_Release",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code: Code is 200\"] = responseCode.code == 200;\nif (responseCode.code == 200){\n    var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");\n    tests[\"Has Content-Type\"] = contentTypeHeaderExists;\n    if (contentTypeHeaderExists) {\n        tests[\"Content-Type is application/json\"] = \n          responseHeaders[\"Content-Type\"].has(\"application/json\");\n    }\n    \n    tests[\"response: errno is 0\"] = responseBody.has(\"\\\"errno\\\":\\\"0\\\"\");\n    var resp = JSON.parse(responseBody)\n    tests[\"response: errno is 0\"] = resp.errno == \"0\";\n    //  时间戳\n    var timestamp =  Date.parse(new Date())/1000\n    var sec = postman.getEnvironmentVariable(\"SECONDS\")\n    tests[\"have server_time\"] = resp.server_time <= timestamp + sec && resp.server_time >= timestamp - sec;\n    \n    if (resp.errno == \"0\") {\n        tests[\"ticket_status is none\"] = resp.data.ticket_status == \"none\";\n        tests[\"is free\"] = resp.data.isfree == \"true\";\n        tests[\"status is 0000\"] = resp.data.status == \"0000\";\n        if (resp.data.status == \"0000\") {\n            tests[\"video_id is cbda6b4755cc241a8ce8d9eaf3d3fde6\"] = resp.data.video_id == \"cbda6b4755cc241a8ce8d9eaf3d3fde6\";\n            tests[\"video_import_id is 41871\"] = resp.data.video_import_id == \"41871\";\n            tests[\"index_id is 00002719166bba229ce498be1e3aa40b\"] = resp.data.index_id == \"00002719166bba229ce498be1e3aa40b\";\n            tests[\"video_index is 1\"] = resp.data.video_index == \"1\";\n            tests[\"index_import_id is 478228\"] = resp.data.index_import_id == \"478228\";\n            tests[\"media_id is 169e970540c7c864f2f4708761bec5c3\"] = resp.data.media_id == \"169e970540c7c864f2f4708761bec5c3\";\n            tests[\"media_import_id is 491367\"] = resp.data.media_import_id == \"491367\";\n        }\n    }\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484195800168,
			"name": "TVOS点播免费片源NoTicket",
			"description": "TVOS点播\nhttp://tvosepg.hifuntv.com/v1/epg/getVodPlayUrl?index_import_id=3633412&video_index=1&buss_id=1000014&media_asset_id=1&category_id=1&video_id=60adf14f4736be23eca7ba5575c02c85&index_id=43ba31c98207a06c5fb6a16f9f709c11&video_import_id=1&device_id=95d654927d47c6da82b6b6695d9f1a3d2ab40a52&license=ZgOOgo5MjkyOTA2HeyCHtA1LBXu0BTsge5V8S5kgmSAgDYd7Db8Olap7S5WZtAaVh0uqjkyOTI5MZgOOgg%3D%3D&m3u8=2&mac_id=00-66-CE-02-40-69&net_id=&part_id=3633412&platform=3&preview=0&quality=hd&svrip=&ticket=XX6501OVPPAARRHPBFAD&type=3&uuid=c0969ad624812e131ed2026cf31aa50f&version=5.0.008.200.2.MG.0.0_Pre_Release",
			"collectionId": "e9a2730e-1f38-216b-4be8-9a59b35d1463"
		},
		{
			"id": "531d9d3e-4b09-958e-2132-06dfa7932240",
			"headers": "",
			"url": "http://{{HOST}}/v1/epg/turnplay/getLivePlayUrlM3u8?channel_id=1153&mac_id=00-66-CE-02-E8-2D&net_id=&device_id=ZgOOgo5MjkyOTA2qvwUOS0t2O5V8dg2qIL8gO3u0qnZ7BQ4gmQWqBgaZO6qVlQZ2tKoOjkyOTI5MZgOOgg%3D%3D&&version=4.6.9.200.2.MG.0.0_Pre_Release&uuid=cd9af89b2b2c475b9e379ace3a678547&buss_id=1&license=ZgOOgo5MjkyOTA60SyB8DbSqIKp7eyB8vwVLhzuZdpUGDgWHtL8ge0sOIAa0DnyZBnYNjkyOTI5MZgOOgg%3D%3D&definition=std",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code: Code is 200\"] = responseCode.code == 200;\nvar contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");\ntests[\"Has Content-Type\"] = contentTypeHeaderExists;\nif (contentTypeHeaderExists) {\n    tests[\"Content-Type is application/json\"] = \n      responseHeaders[\"Content-Type\"].has(\"application/json\");\n}\nif (responseCode.code == 200){\n    tests[\"response: errno is 0\"] = responseBody.has(\"\\\"errno\\\":\\\"0\\\"\");\n    var resp = JSON.parse(responseBody)\n    tests[\"response: errno is 0\"] = resp.errno == \"0\";\n    //  时间戳\n    var now = new Date()\n    var timestamp =  Date.parse(now)/1000\n    var sec = postman.getEnvironmentVariable(\"SECONDS\")\n    tests[\"have server_time\"] = resp.server_time <= timestamp + sec && resp.server_time >= timestamp - sec;\n    \n    if (resp.errno == \"0\"){\n        tests[\"status is 0000\"] = resp.data.status == \"0000\";\n        tests[\"is free\"] = resp.data.isfree == \"true\";\n        tests[\"ticket_status is normal\"] = resp.data.ticket_status == \"normal\";\n        if(resp.data.status == \"0000\"){\n            tests[\"response: url is not empty\"] = responseBody.has(\"\\\"url\\\":\\\"http://\");\n            tests[\"play_list 0 is playing now \"] = new Date(resp.data.play_list[0].end_time) >= now && now >= new Date(resp.data.play_list[0].play_time);\n        }\n    }\n}\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484196958193,
			"name": "轮播取串 真正男子汉 ",
			"description": "轮播取串 真正男子汉\nhttp://tvosepg.hifuntv.com/v1/epg/turnplay/getLivePlayUrlM3u8?channel_id=1153&mac_id=00-66-CE-02-E8-2D&net_id=&device_id=ZgOOgo5MjkyOTA2qvwUOS0t2O5V8dg2qIL8gO3u0qnZ7BQ4gmQWqBgaZO6qVlQZ2tKoOjkyOTI5MZgOOgg%3D%3D&&version=4.6.9.200.2.MG.0.0_Pre_Release&uuid=cd9af89b2b2c475b9e379ace3a678547&buss_id=1&license=ZgOOgo5MjkyOTA60SyB8DbSqIKp7eyB8vwVLhzuZdpUGDgWHtL8ge0sOIAa0DnyZBnYNjkyOTI5MZgOOgg%3D%3D&definition=std",
			"collectionId": "e9a2730e-1f38-216b-4be8-9a59b35d1463"
		},
		{
			"id": "58c357c8-97d5-a5d0-0441-18c11a995b44",
			"headers": "",
			"url": "http://{{HOST}}/v1/epg/turnplay/getLivePlayUrl?channel_id=965&mac_id=00-66-CE-02-E8-2D&device_id=ZgOOgo5MjkyOTA2qvwUOS0t2O5V8dg2qIL8gO3u0qnZ7BQ4gmQWqBgaZO6qVlQZ2tKoOjkyOTI5MZgOOgg%3D%3D&version=4.6.9.200.2.MG.0.0_Pre_Release&uuid=cd9af89b2b2c475b9e379ace3a678547&buss_id=1&license=ZgOOgo5MjkyOTA60SyB8DbSqIKp7eyB8vwVLhzuZdpUGDgWHtL8ge0sOIAa0DnyZBnYNjkyOTI5MZgOOgg%3D%3D&definition=std&ticket=8688GORVISRDESXM64CE",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code: Code is 200\"] = responseCode.code == 200;\nvar contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");\ntests[\"Has Content-Type\"] = contentTypeHeaderExists;\nif (contentTypeHeaderExists) {\n    tests[\"Content-Type is application/json\"] = \n      responseHeaders[\"Content-Type\"].has(\"application/json\");\n}\nif (responseCode.code == 200){\n    // tests[\"response: errno is 2040352\"] = responseBody.has(\"\\\"errno\\\":\\\"2040352\\\"\");\n    var resp = JSON.parse(responseBody)\n    // tests[\"response: errno is 2040352\"] = resp.errno == \"2040352\";\n    tests[\"response: errno is 0\"] = resp.errno == \"0\";\n    //  时间戳\n    var now = new Date()\n    var timestamp =  Date.parse(now)/1000\n    var sec = postman.getEnvironmentVariable(\"SECONDS\")\n    tests[\"have server_time\"] = resp.server_time <= timestamp + sec && resp.server_time >= timestamp - sec;\n    if (resp.errno == \"0\"){\n        // tests[\"ticket_status is none\"] = resp.data.ticket_status == \"none\";\n        tests[\"ticket_status is normal\"] = resp.data.ticket_status == \"normal\";\n        tests[\"status is 0000\"] = resp.data.status == \"0000\";\n    }\n    // tests[\"type is refuse \"] = resp.data.type == \"refuse\";\n}\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484196419157,
			"name": "古装偶像  直播OTT  VIP片源， NoVIP",
			"description": "古装偶像 直播OTT \n\nhttp://tvosepg.hifuntv.com/v1/epg/turnplay/getLivePlayUrl?channel_id=1411&mac_id=00-66-CE-02-E8-2D&device_id=ZgOOgo5MjkyOTA2qvwUOS0t2O5V8dg2qIL8gO3u0qnZ7BQ4gmQWqBgaZO6qVlQZ2tKoOjkyOTI5MZgOOgg%3D%3D&version=4.6.9.200.2.MG.0.0_Pre_Release&uuid=cd9af89b2b2c475b9e379ace3a678547&buss_id=1&license=ZgOOgo5MjkyOTA60SyB8DbSqIKp7eyB8vwVLhzuZdpUGDgWHtL8ge0sOIAa0DnyZBnYNjkyOTI5MZgOOgg%3D%3D&definition=std",
			"collectionId": "e9a2730e-1f38-216b-4be8-9a59b35d1463"
		},
		{
			"id": "62d573ae-2a87-00ec-9d2e-82b5ae4ea3c9",
			"headers": "",
			"url": "http://{{HOST}}/v1/epg/turnplay/getActorLiveList?mac_id=00-66-CE-02-E8-2D&device_id=ZgOOgo5MjkyOTA2qvwUOS0t2O5V8dg2qIL8gO3u0qnZ7BQ4gmQWqBgaZO6qVlQZ2tKoOjkyOTI5MZgOOgg%3D%3D&version=4.6.9.200.2.MG.0.0_Pre_Release&uuid=cd9af89b2b2c475b9e379ace3a678547&license=ZgOOgo5MjkyOTA60SyB8DbSqIKp7eyB8vwVLhzuZdpUGDgWHtL8ge0sOIAa0DnyZBnYNjkyOTI5MZgOOgg%3D%3D&dcp_id=2&quality=1&quality=1&pre=1&platform=3",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"tests": "var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");\ntests[\"Has Content-Type\"] = contentTypeHeaderExists;\nif (contentTypeHeaderExists) {\n    tests[\"Content-Type is application/json\"] = \n      responseHeaders[\"Content-Type\"].has(\"application/json\");\n}\n\nif (responseCode.code == 200){\n    var timestamp =  Date.parse(new Date())/1000\n    var resp = JSON.parse(responseBody);\n    var sec = postman.getEnvironmentVariable(\"SECONDS\")\n    tests[\"have server_time\"] = resp.server_time <= timestamp + sec && resp.server_time >= timestamp - sec;\n}\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484196120429,
			"name": "获取明星直播列表",
			"description": "获取明星直播列表\ntvosepg.hifuntv.com/v1/epg/turnplay/getActorLiveList?mac_id=00-66-CE-02-E8-2D&device_id=ZgOOgo5MjkyOTA2qvwUOS0t2O5V8dg2qIL8gO3u0qnZ7BQ4gmQWqBgaZO6qVlQZ2tKoOjkyOTI5MZgOOgg%3D%3D&version=4.6.9.200.2.MG.0.0_Pre_Release&uuid=cd9af89b2b2c475b9e379ace3a678547&license=ZgOOgo5MjkyOTA60SyB8DbSqIKp7eyB8vwVLhzuZdpUGDgWHtL8ge0sOIAa0DnyZBnYNjkyOTI5MZgOOgg%3D%3D&dcp_id=2&quality=1&quality=1&pre=0&platform=5",
			"collectionId": "e9a2730e-1f38-216b-4be8-9a59b35d1463",
			"responses": []
		},
		{
			"id": "6b58b5ed-c783-8566-91f0-f62cf617e583",
			"headers": "",
			"url": "http://{{HOST}}/v1/epg/getVodPlayUrl?index_import_id=478228&video_index=1&buss_id=1000014&media_asset_id=1&category_id=1&video_id=cbda6b4755cc241a8ce8d9eaf3d3fde6&index_id=00002719166bba229ce498be1e3aa40b&video_import_id=1&device_id=95d654927d47c6da82b6b6695d9f1a3d2ab40a52&license=ZgOOgo5MjkyOTA2HeyCHtA1LBXu0BTsge5V8S5kgmSAgDYd7Db8Olap7S5WZtAaVh0uqjkyOTI5MZgOOgg%3D%3D&m3u8=2&mac_id=00-66-CE-02-40-69&net_id=&part_id=478228&platform=3&preview=0&quality=hd&ticket=8688GORVISRDESXM64CE&type=3&uuid=c0969ad624812e131ed2026cf31aa50f&version=5.0.008.200.2.MG.0.0_Pre_Release",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code: Code is 200\"] = responseCode.code == 200;\nif (responseCode.code == 200){\n    var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");\n    tests[\"Has Content-Type\"] = contentTypeHeaderExists;\n    if (contentTypeHeaderExists) {\n        tests[\"Content-Type is application/json\"] = \n          responseHeaders[\"Content-Type\"].has(\"application/json\");\n    }\n    tests[\"response: ticket_status is normal\"]  = responseBody.has(\"\\\"ticket_status\\\":\\\"normal\\\"\");\n    var resp = JSON.parse(responseBody)\n    tests[\"response: errno is 0\"] = resp.errno == \"0\";\n    //  时间戳\n    var timestamp =  Date.parse(new Date())/1000\n    var sec = postman.getEnvironmentVariable(\"SECONDS\")\n    tests[\"have server_time\"] = resp.server_time <= timestamp + sec && resp.server_time >= timestamp - sec;\n    if (resp.errno == \"0\"){\n        tests[\"ticket_status is normal\"] = resp.data.ticket_status == \"normal\";\n        tests[\"is free\"] = resp.data.isfree == \"true\";\n        tests[\"status is 0000\"] = resp.data.status == \"0000\";\n        if (resp.data.status == \"0000\"){\n            tests[\"video_id is cbda6b4755cc241a8ce8d9eaf3d3fde6\"] = resp.data.video_id == \"cbda6b4755cc241a8ce8d9eaf3d3fde6\";\n            tests[\"video_import_id is 41871\"] = resp.data.video_import_id == \"41871\";\n            tests[\"index_id is 00002719166bba229ce498be1e3aa40b\"] = resp.data.index_id == \"00002719166bba229ce498be1e3aa40b\";\n            tests[\"video_index is 1\"] = resp.data.video_index == \"1\";\n            tests[\"index_import_id is 478228\"] = resp.data.index_import_id == \"478228\";\n            tests[\"media_id is 169e970540c7c864f2f4708761bec5c3\"] = resp.data.media_id == \"169e970540c7c864f2f4708761bec5c3\";\n            tests[\"media_import_id is 491367\"] = resp.data.media_import_id == \"491367\";\n        }\n    }\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484195942448,
			"name": "TVOS点播免费片源Ticket",
			"description": "TVOS点播\nhttp://tvosepg.hifuntv.com/v1/epg/getVodPlayUrl?index_import_id=3633412&video_index=1&buss_id=1000014&media_asset_id=1&category_id=1&video_id=60adf14f4736be23eca7ba5575c02c85&index_id=43ba31c98207a06c5fb6a16f9f709c11&video_import_id=1&device_id=95d654927d47c6da82b6b6695d9f1a3d2ab40a52&license=ZgOOgo5MjkyOTA2HeyCHtA1LBXu0BTsge5V8S5kgmSAgDYd7Db8Olap7S5WZtAaVh0uqjkyOTI5MZgOOgg%3D%3D&m3u8=2&mac_id=00-66-CE-02-40-69&net_id=&part_id=3633412&platform=3&preview=0&quality=hd&svrip=&ticket=XX6501OVPPAARRHPBFAD&type=3&uuid=c0969ad624812e131ed2026cf31aa50f&version=5.0.008.200.2.MG.0.0_Pre_Release",
			"collectionId": "e9a2730e-1f38-216b-4be8-9a59b35d1463"
		},
		{
			"id": "6f870cb8-a529-d8b2-f53b-5f905fb72f21",
			"headers": "",
			"url": "http://{{HOST}}/v1/epg/startAuth?hash=b51f2206ae1b9f2061bb727df2f774bb&codec=10052008&pack=AIMAHuxT3MkyQKavHti-jrTx3q4DAUdO-JfqHW4pjaYvSXSgZ8i82vJtvbnX-W-Vs2jMwmy5Za-0d8byIxZMEN2X_4Er-lMfpqgEj-qnZudVPHHoWPEtnRVI8paT_0MrpbLX_rcqLf0wY7SO_DAJ7fWmwJKm13vR__40YViEsXtg84BMm3Z7ImRldmljZV9pZCI6IjdlMjQwZGU3NGZiMWVkMDhmYTA4ZDM4MDYzZjZhNmE5MTQ2MmE4MTUiLCJtYWNfaWQiOiIwMC0wQi0yRi0zMy03Qi0wMCIsInV1aWQiOiJtZ3R2bWFjMDAwQjJGMzM3QjAwIiwidmVyc2lvbiI6IjEuMS4xLjI4OC4zLlRWT1MuMC4wX1JlbGVhc2UifQ",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code: Code is 200\"] = responseCode.code == 200;\nif (responseCode.code == 200){\n    var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");\n    tests[\"Has Content-Type\"] = contentTypeHeaderExists;\n    if (contentTypeHeaderExists) {\n        tests[\"Content-Type is application/json\"] = \n          responseHeaders[\"Content-Type\"].has(\"application/json\");\n    }\n    var resp = JSON.parse(responseBody)\n    tests[\"response: errno is 0\"] = resp.errno == \"0\";\n    //  时间戳\n    var timestamp =  Date.parse(new Date())/1000\n    var sec = postman.getEnvironmentVariable(\"SECONDS\")\n    tests[\"have server_time\"] = resp.server_time <= timestamp + sec && resp.server_time >= timestamp - sec;\n}\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484195584289,
			"name": "开始鉴权",
			"description": "http://tvosepg.hifuntv.com/v1/epg/startAuth?hash=b51f2206ae1b9f2061bb727df2f774bb&codec=10052008&pack=AIMAHuxT3MkyQKavHti-jrTx3q4DAUdO-JfqHW4pjaYvSXSgZ8i82vJtvbnX-W-Vs2jMwmy5Za-0d8byIxZMEN2X_4Er-lMfpqgEj-qnZudVPHHoWPEtnRVI8paT_0MrpbLX_rcqLf0wY7SO_DAJ7fWmwJKm13vR__40YViEsXtg84BMm3Z7ImRldmljZV9pZCI6IjdlMjQwZGU3NGZiMWVkMDhmYTA4ZDM4MDYzZjZhNmE5MTQ2MmE4MTUiLCJtYWNfaWQiOiIwMC0wQi0yRi0zMy03Qi0wMCIsInV1aWQiOiJtZ3R2bWFjMDAwQjJGMzM3QjAwIiwidmVyc2lvbiI6IjEuMS4xLjI4OC4zLlRWT1MuMC4wX1JlbGVhc2UifQ",
			"collectionId": "e9a2730e-1f38-216b-4be8-9a59b35d1463",
			"responses": []
		},
		{
			"id": "73478653-9439-bb47-04a8-961370ec2756",
			"headers": "",
			"url": "http://{{HOST}}/v1/epg/getSearchSuggestList?version=1.1.1.288.3.TVOS.0.0_Release&mac_id=00-66-CF-0D-5A-0D&device_id=7e240de74fb1ed08fa08d38063f6a6a91462a815&uuid=mgtvmac0066CF0D5A0D&license=ZgOOgo5MjkyOTKq0qnYOBqqqDSCZDnaHS0s7lXtLO0uHlb8ghwW0mQV2IA47DqqZtA5LjkyOTI5MZgOOgg==&buss_id=1500037&net_id=051201501134519&search_key=NH",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code: Code is 200\"] = responseCode.code == 200;\nif (responseCode.code == 200){\n    var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");\n    tests[\"Has Content-Type\"] = contentTypeHeaderExists;\n    if (contentTypeHeaderExists) {\n        tests[\"Content-Type is application/json\"] = \n          responseHeaders[\"Content-Type\"].has(\"application/json\");\n    }\n    var resp = JSON.parse(responseBody)\n    tests[\"response: errno is 0\"] = resp.errno == \"0\";\n    //  时间戳\n    var timestamp =  Date.parse(new Date())/1000\n    var sec = postman.getEnvironmentVariable(\"SECONDS\")\n    tests[\"have server_time\"] = resp.server_time <= timestamp + sec && resp.server_time >= timestamp - sec;\n    \n    tests[\"response: count_num is not 0\"] = resp.data.count_num !== \"0\";\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484195585176,
			"name": "搜索建议",
			"description": "http://tvosepg.hifuntv.com/v1/epg/getSearchSuggestList?version=1.1.1.288.3.TVOS.0.0_Release&mac_id=00-66-CF-0D-5A-0D&device_id=7e240de74fb1ed08fa08d38063f6a6a91462a815&uuid=mgtvmac0066CF0D5A0D&license=ZgOOgo5MjkyOTKq0qnYOBqqqDSCZDnaHS0s7lXtLO0uHlb8ghwW0mQV2IA47DqqZtA5LjkyOTI5MZgOOgg==&buss_id=1500037&net_id=051201501134519&search_key=NH",
			"collectionId": "e9a2730e-1f38-216b-4be8-9a59b35d1463",
			"responses": []
		},
		{
			"id": "82f91d6f-6c9a-5d3f-951f-8370fefda26c",
			"headers": "",
			"url": "http://{{HOST}}/v1/epg/getVodPlayUrl?index_import_id=3633412&video_index=1&buss_id=1000014&media_asset_id=1&category_id=1&video_id=60adf14f4736be23eca7ba5575c02c85&index_id=43ba31c98207a06c5fb6a16f9f709c11&video_import_id=1&device_id=95d654927d47c6da82b6b6695d9f1a3d2ab40a52&license=ZgOOgo5MjkyOTA2HeyCHtA1LBXu0BTsge5V8S5kgmSAgDYd7Db8Olap7S5WZtAaVh0uqjkyOTI5MZgOOgg%3D%3D&m3u8=2&mac_id=00-66-CE-02-40-69&net_id=&part_id=3633412&platform=3&preview=0&quality=hd&ticket=8688GORVISRDESXM64CE&type=3&uuid=c0969ad624812e131ed2026cf31aa50f&version=5.0.008.200.2.MG.0.0_Pre_Release",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code: Code is 200\"] = responseCode.code == 200;\nvar contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");\ntests[\"Has Content-Type\"] = contentTypeHeaderExists;\nif (contentTypeHeaderExists) {\n    tests[\"Content-Type is application/json\"] = \n      responseHeaders[\"Content-Type\"].has(\"application/json\");\n}\nif (responseCode.code == 200){\n    tests[\"response: errno is 0\"] = responseBody.has(\"\\\"errno\\\":\\\"0\\\"\");\n    tests[\"response: ticket_status is normal\"]  = responseBody.has(\"\\\"ticket_status\\\":\\\"normal\\\"\");\n    var resp = JSON.parse(responseBody)\n    tests[\"response: errno is 0\"] = resp.errno == \"0\";\n    //  时间戳\n    var timestamp =  Date.parse(new Date())/1000\n    var sec = postman.getEnvironmentVariable(\"SECONDS\")\n    tests[\"have server_time\"] = resp.server_time <= timestamp + sec && resp.server_time >= timestamp - sec;\n    \n    tests[\"ticket_status is normal\"] = resp.data.ticket_status == \"normal\";\n    tests[\"status is 0000\"] = resp.data.status == \"0000\";\n\n    if(resp.errno == \"0\"){\n        tests[\"is free not empty\"] = resp.data.isfree !== \"\";\n        tests[\"video_id is be5df7e1f80bfb56f23eca18448177aa\"] = resp.data.video_id == \"be5df7e1f80bfb56f23eca18448177aa\";\n        tests[\"video_import_id is 296224\"] = resp.data.video_import_id == \"296224\";\n        tests[\"index_id is 7ed31ac3f18ae5786490ef60e599bf14\"] = resp.data.index_id == \"7ed31ac3f18ae5786490ef60e599bf14\";\n        tests[\"video_index is 0\"] = resp.data.video_index == \"0\";\n        tests[\"index_import_id is 3633412\"] = resp.data.index_import_id == \"3633412\";\n        tests[\"media_id is db34c0f58d50508e195f967b9d280e32\"] = resp.data.media_id == \"db34c0f58d50508e195f967b9d280e32\";\n        tests[\"media_import_id is 9106325\"] = resp.data.media_import_id == \"9106325\";\n    }\n}\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484196375804,
			"name": "TVOS点播VIP片源Ticket",
			"description": "TVOS点播\nhttp://tvosepg.hifuntv.com/v1/epg/getVodPlayUrl?index_import_id=3633412&video_index=1&buss_id=1000014&media_asset_id=1&category_id=1&video_id=60adf14f4736be23eca7ba5575c02c85&index_id=43ba31c98207a06c5fb6a16f9f709c11&video_import_id=1&device_id=95d654927d47c6da82b6b6695d9f1a3d2ab40a52&license=ZgOOgo5MjkyOTA2HeyCHtA1LBXu0BTsge5V8S5kgmSAgDYd7Db8Olap7S5WZtAaVh0uqjkyOTI5MZgOOgg%3D%3D&m3u8=2&mac_id=00-66-CE-02-40-69&net_id=&part_id=3633412&platform=3&preview=0&quality=hd&svrip=&ticket=XX6501OVPPAARRHPBFAD&type=3&uuid=c0969ad624812e131ed2026cf31aa50f&version=5.0.008.200.2.MG.0.0_Pre_Release",
			"collectionId": "e9a2730e-1f38-216b-4be8-9a59b35d1463"
		},
		{
			"id": "94a1054c-3d22-c992-ca46-2a6cc9d89a24",
			"headers": "",
			"url": "http://{{HOST}}//v1/epg/turnplay/getLivePlayUrlM3u8MPP?channel_id=1153&version=4.6.9.200.2.MG.0.0_Pre_Release&uuid=cd9af89b2b2c475b9e379ace3a678547&buss_id=1&license=ZgOOgo5MjkyOTA60SyB8DbSqIKp7eyB8vwVLhzuZdpUGDgWHtL8ge0sOIAa0DnyZBnYNjkyOTI5MZgOOgg%3D%3D&definition=std",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code: Code is 200\"] = responseCode.code == 200;\nvar contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");\ntests[\"Has Content-Type\"] = contentTypeHeaderExists;\nif (contentTypeHeaderExists) {\n    tests[\"Content-Type is application/json\"] = \n      responseHeaders[\"Content-Type\"].has(\"application/json\");\n}\nif (responseCode.code == 200){\n    tests[\"response: errno is 0\"] = responseBody.has(\"\\\"errno\\\":\\\"0\\\"\");\n    tests[\"response: url is not empty\"] = responseBody.has(\"\\\"url\\\":\\\"http://\");\n    var resp = JSON.parse(responseBody)\n    tests[\"response: errno is 0\"] = resp.errno == \"0\";\n    //  时间戳\n    var now = new Date()\n    var timestamp =  Date.parse(now)/1000\n    var sec = postman.getEnvironmentVariable(\"SECONDS\")\n    tests[\"have server_time\"] = resp.server_time <= timestamp + sec && resp.server_time >= timestamp - sec;\n    if(resp.errno == \"0\"){\n        //tests[\"ticket_status is normal\"] = resp.data.ticket_status == \"normal\";\n        //tests[\"status is 0000\"] = resp.data.status == \"0000\";\n        \n        // tests[\"is free\"] = resp.data.isfree == \"true\";\n        \n        tests[\"play_list 0 is playing now \"] = new Date(resp.data.play_list[0].end_time) >= now && now >= new Date(resp.data.play_list[0].play_time);\n    }\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484196481995,
			"name": " 轮播取串 真正男子汉MPP",
			"description": " 轮播取串 真正男子汉MPP\n http://tvosepg.hifuntv.com//v1/epg/turnplay/getLivePlayUrlM3u8MPP?channel_id=1153&version=4.6.9.200.2.MG.0.0_Pre_Release&uuid=cd9af89b2b2c475b9e379ace3a678547&buss_id=1&license=ZgOOgo5MjkyOTA60SyB8DbSqIKp7eyB8vwVLhzuZdpUGDgWHtL8ge0sOIAa0DnyZBnYNjkyOTI5MZgOOgg%3D%3D&definition=std",
			"collectionId": "e9a2730e-1f38-216b-4be8-9a59b35d1463"
		},
		{
			"id": "bca0f684-0e16-2e6d-fd71-5ac95446cb7e",
			"headers": "",
			"url": "http://{{HOST}}/v1/epg/getVodPlayUrl?buss_id=1000014&category_id=1000&device_id=7e240de74fb1ed08fa08d38063f6a6a91462a815&index_id=43ba31c98207a06c5fb6a16f9f709c11&index_import_id=3655969&license=ZgOOgo5MjkyOTA2HeyCHtA1LBXu0BTsge5V8S5kgmSAgDYd7Db8Olap7S5WZtAaVh0uqjkyOTI5MZgOOgg%3D%3D&mac_id=00-0B-2F-33-7B-00&media_asset_id=variety&net_id=051001010000055&quality=hd&ticket=8101QTOVWJTBPAPZFE25&uuid=mgtvmac000B2F337B00&version=1.1.1.288.3.TVOS.0.0_Release&video_id=60adf14f4736be23eca7ba5575c02c85&video_import_id=3655969&video_index=0",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code: Code is 200\"] = responseCode.code == 200;\nvar contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");\ntests[\"Has Content-Type\"] = contentTypeHeaderExists;\nif (contentTypeHeaderExists) {\n    tests[\"Content-Type is application/json\"] = \n      responseHeaders[\"Content-Type\"].has(\"application/json\");\n}\nif (responseCode.code == 200){\n    tests[\"response: errno is 2040352\"] = responseBody.has(\"\\\"errno\\\":\\\"2040352\\\"\");\n    tests[\"response: data is empty\"] = responseBody.has(\"\\\"data\\\":{}\");\n    \n    var resp = JSON.parse(responseBody)\n    tests[\"response: errno is 2040352\"] = resp.errno == \"2040352\";\n    //  时间戳\n    var timestamp =  Date.parse(new Date())/1000\n    var sec = postman.getEnvironmentVariable(\"SECONDS\")\n    tests[\"have server_time\"] = resp.server_time <= timestamp + sec && resp.server_time >= timestamp - sec;\n}\npostman.setEnvironmentVariable(\"t\",timestamp)\npostman.clearEnvironmentVariable(\"t\")\npostman.clearEnvironmentVariable(\"rsaStr\")\npostman.clearEnvironmentVariable(\"stringToHexrsaStr\")\npostman.clearEnvironmentVariable(\"timestamp\")\npostman.clearEnvironmentVariable(\"url\")",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484196225359,
			"name": "TVOS点播  青云志 非vip",
			"description": "TVOS点播  青云志\nhttp://tvosepg.hifuntv.com/v1/epg/getVodPlayUrl?buss_id=1000014&category_id=1000&device_id=7e240de74fb1ed08fa08d38063f6a6a91462a815&index_id=43ba31c98207a06c5fb6a16f9f709c11&index_import_id=3655969&license=ZgOOgo5MjkyOTA2HeyCHtA1LBXu0BTsge5V8S5kgmSAgDYd7Db8Olap7S5WZtAaVh0uqjkyOTI5MZgOOgg%3D%3D&mac_id=00-0B-2F-33-7B-00&media_asset_id=variety&net_id=051001010000055&quality=hd&ticket=8101QTOVWJTBPAPZFE25&uuid=mgtvmac000B2F337B00&version=1.1.1.288.3.TVOS.0.0_Release&video_id=60adf14f4736be23eca7ba5575c02c85&video_import_id=3655969&video_index=0",
			"collectionId": "e9a2730e-1f38-216b-4be8-9a59b35d1463"
		},
		{
			"id": "c76c4dd3-d964-2e34-70d5-8e0dea3ffa33",
			"headers": "",
			"url": "http://{{HOST}}/v1/epg/turnplay/getLivePlayUrlMPP?version=PCweb_1.0&platform=1&buss_id=2000001&channel_id=965&definition=sd&ticket=3653IQPVNYEEIKLZ66D8",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code: Code is 200\"] = responseCode.code == 200;\nvar contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");\ntests[\"Has Content-Type\"] = contentTypeHeaderExists;\nif (contentTypeHeaderExists) {\n    tests[\"Content-Type is application/json\"] = \n      responseHeaders[\"Content-Type\"].has(\"application/json\");\n}\nif (responseCode.code == 200){\n    tests[\"response: errno is 2040341\"] = responseBody.has(\"\\\"errno\\\":\\\"2040341\\\"\");\n    // tests[\"response: url is not empty\"] = responseBody.has(\"\\\"url\\\":\\\"http://\");\n    var resp = JSON.parse(responseBody)\n    var timestamp =  Date.parse(new Date())/1000\n    var sec = postman.getEnvironmentVariable(\"SECONDS\")\n    tests[\"have server_time\"] = resp.server_time <= timestamp + sec && resp.server_time >= timestamp - sec;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484197377806,
			"name": "MPP VIP用户看VIP频道",
			"description": "http://tvosepg.hifuntv.com/v1/epg/turnplay/getLivePlayUrlMPP?version=PCweb_1.0&platform=1&buss_id=2000001&channel_id=965&definition=sd&ticket=3653IQPVNYEEIKLZ66D8",
			"collectionId": "e9a2730e-1f38-216b-4be8-9a59b35d1463"
		},
		{
			"id": "c7bd2b4e-69e2-9032-eab0-e3c7966982e3",
			"headers": "",
			"url": "http://{{HOST}}/v1/epg5/getVodPlayUrl?part_id=3310898&mac_id=00-66-CE-02-E8-2D&device_id=ZgOOgo5MjkyOTA2qvwUOS0t2O5V8dg2qIL8gO3u0qnZ7BQ4gmQWqBgaZO6qVlQZ2tKoOjkyOTI5MZgOOgg%3D%3D&version=4.6.9.200.2.MG.0.0_Pre_Release&uuid=cd9af89b2b2c475b9e379ace3a678547&license=ZgOOgo5MjkyOTA60SyB8DbSqIKp7eyB8vwVLhzuZdpUGDgWHtL8ge0sOIAa0DnyZBnYNjkyOTI5MZgOOgg%3D%3D&dcp_id=2&quality=1&quality=1",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code: Code is 200\"] = responseCode.code == 200;\nvar contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");\ntests[\"Has Content-Type\"] = contentTypeHeaderExists;\nif (contentTypeHeaderExists) {\n    tests[\"Content-Type is application/json\"] = \n      responseHeaders[\"Content-Type\"].has(\"application/json\");\n}\n\nif (responseCode.code == 200){\n    var resp = JSON.parse(responseBody);\n    tests[\"response: errno is 0\"] = resp.errno == \"0\";\n    if (resp.errno == \"0\"){\n        tests[\"response: body has url\"] = responseBody.has(\"\\\"url\\\":\\\"http://\");\n        tests[\"response: url is not empty\"] = resp.data.url !== \"\";\n        //  时间戳\n        var timestamp =  Date.parse(new Date())/1000\n        var sec = postman.getEnvironmentVariable(\"SECONDS\")\n        tests[\"have server_time\"] = resp.server_time <= timestamp + sec && resp.server_time >= timestamp - sec;\n    }\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484197468293,
			"name": "Epg5合集下线分集上线取串",
			"description": "http://tvosepg.hifuntv.com/v1/epg5/getVodPlayUrl?part_id=3310898&mac_id=00-66-CE-02-E8-2D&device_id=ZgOOgo5MjkyOTA2qvwUOS0t2O5V8dg2qIL8gO3u0qnZ7BQ4gmQWqBgaZO6qVlQZ2tKoOjkyOTI5MZgOOgg%3D%3D&version=4.6.9.200.2.MG.0.0_Pre_Release&uuid=cd9af89b2b2c475b9e379ace3a678547&license=ZgOOgo5MjkyOTA60SyB8DbSqIKp7eyB8vwVLhzuZdpUGDgWHtL8ge0sOIAa0DnyZBnYNjkyOTI5MZgOOgg%3D%3D&dcp_id=2&quality=1&quality=1",
			"collectionId": "e9a2730e-1f38-216b-4be8-9a59b35d1463"
		},
		{
			"id": "cdb9daca-7eaf-f61d-f39e-3b5db2676646",
			"headers": "",
			"url": "http://{{HOST}}/v1/epg/turnplay/getLivePlayUrl?channel_id=911&mac_id=00-66-CE-02-E8-2D&device_id=ZgOOgo5MjkyOTA2qvwUOS0t2O5V8dg2qIL8gO3u0qnZ7BQ4gmQWqBgaZO6qVlQZ2tKoOjkyOTI5MZgOOgg%3D%3D&version=4.6.9.200.2.MG.0.0_Pre_Release&uuid=cd9af89b2b2c475b9e379ace3a678547&buss_id=1&license=ZgOOgo5MjkyOTA60SyB8DbSqIKp7eyB8vwVLhzuZdpUGDgWHtL8ge0sOIAa0DnyZBnYNjkyOTI5MZgOOgg%3D%3D&definition=std",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code: Code is 200\"] = responseCode.code == 200;\nvar contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");\ntests[\"Has Content-Type\"] = contentTypeHeaderExists;\nif (contentTypeHeaderExists) {\n    tests[\"Content-Type is application/json\"] = \n      responseHeaders[\"Content-Type\"].has(\"application/json\");\n}\nif (responseCode.code == 200){\n    tests[\"response: errno is 0\"] = responseBody.has(\"\\\"errno\\\":\\\"0\\\"\");\n    var resp = JSON.parse(responseBody)\n    tests[\"response: errno is 0\"] = resp.errno == \"0\";\n    //  时间戳\n    var now = new Date()\n    var timestamp =  Date.parse(now)/1000\n    var sec = postman.getEnvironmentVariable(\"SECONDS\")\n    tests[\"have server_time\"] = resp.server_time <= timestamp + sec && resp.server_time >= timestamp - sec;\n    if (resp.errno == \"0\"){\n        tests[\"response: url is not empty\"] = responseBody.has(\"\\\"url\\\":\\\"http://\");\n        tests[\"ticket_status is normal\"] = resp.data.ticket_status == \"normal\";\n        tests[\"status is 0000\"] = resp.data.status == \"0000\";\n        \n        tests[\"is free\"] = resp.data.isfree == \"true\";\n        if (resp.data.status == \"0000\"){\n            tests[\"url is not empty \"] = resp.data.url !== \"\";\n            tests[\"npuk is not empty \"] = resp.data.npuk !== \"\";\n            tests[\"isothercdn is 0 \"] = resp.data.isothercdn == \"0\"; \n        }\n    }\n}\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484196094726,
			"name": "古装偶像  直播OTT 免费 非vip",
			"description": "古装偶像 直播OTT \n\nhttp://tvosepg.hifuntv.com/v1/epg/turnplay/getLivePlayUrl?channel_id=911&mac_id=00-66-CE-02-E8-2D&device_id=ZgOOgo5MjkyOTA2qvwUOS0t2O5V8dg2qIL8gO3u0qnZ7BQ4gmQWqBgaZO6qVlQZ2tKoOjkyOTI5MZgOOgg%3D%3D&version=4.6.9.200.2.MG.0.0_Pre_Release&uuid=cd9af89b2b2c475b9e379ace3a678547&buss_id=1&license=ZgOOgo5MjkyOTA60SyB8DbSqIKp7eyB8vwVLhzuZdpUGDgWHtL8ge0sOIAa0DnyZBnYNjkyOTI5MZgOOgg%3D%3D&definition=std",
			"collectionId": "e9a2730e-1f38-216b-4be8-9a59b35d1463"
		},
		{
			"id": "d2507579-450f-0441-8802-6d33d00d35da",
			"headers": "",
			"url": "http://{{HOST}}/v1/epg5/getVodPlayUrl?part_id=3097560&platform=3&buss_id=1000014&device_id=693f70338ef3fe87e940c0e999a17dba8a55bc7a&dcp_id=0&net_id=&type=3&version=5.1.106.200.2.TY.0.0_Pre_Release&preview=0&ticket=7069T5TVRLQWTXNT97E1&svrip=&quality=4&mac_id=00-0B-2F-33-7B-00&uuid=mgtvmac000B2F337B00&license=ZgOOgo5MjkyOTCANqr8FBqqqfHa%2Fqr92fAV2DbQGOwZ2DQ0NlQ4Fe5mVfJWHh5k7BZW0jkyOTI5MZgOOgg%3D%3D",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"response code is 200\"] = responseCode.code === 200;\nif (responseCode.code == 200){\n    var contentTypeExists=responseHeaders.hasOwnProperty(\"Content-Type\");\n    tests[\"content type exists\"] = contentTypeExists;\n    if (contentTypeExists){\n        tests[\"content type is json\"] = responseHeaders[\"Content-Type\"].has(\"application/json\")\n    }\n    var  resp = JSON.parse(responseBody);\n    tests[\"errno is 0\"] = resp.errno == \"0\"\n    if (resp.errno == \"0\"){\n        tests[\"isothercdn is 0\"] = resp.data.isothercdn.length !== 0\n        tests[\"url is not empty\"] = resp.data.url.length !== 0\n    }\n    var timestamp =  Date.parse(new Date())/1000\n    var sec = postman.getEnvironmentVariable(\"SECONDS\")\n    tests[\"have server_time\"] = resp.server_time <= timestamp + sec && resp.server_time >= timestamp - sec;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484195581505,
			"name": "点播因为爱情有幸福",
			"description": "http://{{HOST}}/v1/epg5/getVodPlayUrl?part_id=3097560&platform=3&buss_id=1000014&device_id=693f70338ef3fe87e940c0e999a17dba8a55bc7a&dcp_id=0&net_id=&type=3&version=5.1.106.200.2.TY.0.0_Pre_Release&preview=0&ticket=7069T5TVRLQWTXNT97E1&svrip=&quality=4&mac_id=00-0B-2F-33-7B-00&uuid=mgtvmac000B2F337B00&license=ZgOOgo5MjkyOTCANqr8FBqqqfHa%2Fqr92fAV2DbQGOwZ2DQ0NlQ4Fe5mVfJWHh5k7BZW0jkyOTI5MZgOOgg%3D%3D",
			"collectionId": "e9a2730e-1f38-216b-4be8-9a59b35d1463",
			"responses": []
		},
		{
			"id": "d5271e00-9c7d-cbdd-1788-e6ee3c982004",
			"headers": "",
			"url": "http://{{HOST}}/v1/epg/turnplay/getLivePlayBill?channel_id=1153&mac_id=00-66-CE-02-E8-2D&net_id=&device_id=ZgOOgo5MjkyOTA2qvwUOS0t2O5V8dg2qIL8gO3u0qnZ7BQ4gmQWqBgaZO6qVlQZ2tKoOjkyOTI5MZgOOgg%3D%3D&&version=4.6.9.200.2.MG.0.0_Pre_Release&uuid=cd9af89b2b2c475b9e379ace3a678547&buss_id=1&license=ZgOOgo5MjkyOTA60SyB8DbSqIKp7eyB8vwVLhzuZdpUGDgWHtL8ge0sOIAa0DnyZBnYNjkyOTI5MZgOOgg%3D%3D",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "var zeroize = function (value, length) {        \n    if (!length) length = 2;        \n    value = String(value);        \n    for (var i = 0, zeros = ''; i < (length - value.length); i++) {\n        zeros += '0';\n    }     \n    return zeros + value;\n};\n\nfunction GetDateStr(AddDayCount) {\n    var dd = new Date();\n    dd.setDate(dd.getDate()+AddDayCount);//获取AddDayCount天后的日期\n    var y = dd.getFullYear();\n    var m = dd.getMonth()+1;//获取当前月份的日期\n    var d = dd.getDate();\n    return y+\"\"+zeroize(m)+\"\"+zeroize(d);\n    // return y+\"-\"+m+\"-\"+d;\n}\n\n// 对Date的扩展，将 Date 转化为指定格式的String   \n// 月(M)、日(d)、小时(h)、分(m)、秒(s)、季度(q) 可以用 1-2 个占位符，   \n// 年(y)可以用 1-4 个占位符，毫秒(S)只能用 1 个占位符(是 1-3 位的数字)   \n// 例子：   \n// (new Date()).Format(\"yyyy-MM-dd hh:mm:ss.S\") ==> 2006-07-02 08:09:04.423   \n// (new Date()).Format(\"yyyy-M-d h:m:s.S\")      ==> 2006-7-2 8:9:4.18   \nDate.prototype.Format = function(fmt)   \n{ //author: meizz   \n  var o = {   \n    \"M+\" : this.getMonth()+1,                 //月份   \n    \"d+\" : this.getDate(),                    //日   \n    \"h+\" : this.getHours(),                   //小时   \n    \"m+\" : this.getMinutes(),                 //分   \n    \"s+\" : this.getSeconds(),                 //秒   \n    \"q+\" : Math.floor((this.getMonth()+3)/3), //季度   \n    \"S\"  : this.getMilliseconds()             //毫秒   \n  };   \n  if(/(y+)/.test(fmt))   \n    fmt=fmt.replace(RegExp.$1, (this.getFullYear()+\"\").substr(4 - RegExp.$1.length));   \n  for(var k in o)   \n    if(new RegExp(\"(\"+ k +\")\").test(fmt))   \n  fmt = fmt.replace(RegExp.$1, (RegExp.$1.length==1) ? (o[k]) : ((\"00\"+ o[k]).substr((\"\"+ o[k]).length)));   \n  return fmt;   \n}  \n\ntests[\"Status code: Code is 200\"] = responseCode.code == 200;\nif (responseCode.code == 200){\n    var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");\n    tests[\"Has Content-Type\"] = contentTypeHeaderExists;\n    if (contentTypeHeaderExists) {\n        tests[\"Content-Type is application/json\"] = \n          responseHeaders[\"Content-Type\"].has(\"application/json\");\n    }\n    tests[\"response: errno is 0\"] = responseBody.has(\"\\\"errno\\\":\\\"0\\\"\");\n    var resp = JSON.parse(responseBody)\n    tests[\"response: errno is 0\"] = resp.errno == \"0\";\n    //  时间戳\n    var timestamp =  Date.parse(new Date())/1000\n    var sec = postman.getEnvironmentVariable(\"SECONDS\")\n    tests[\"have server_time\"] = resp.server_time <= timestamp + sec && resp.server_time >= timestamp - sec;\n    \n    if (resp.errno == \"0\"){\n        \n        tests[\"response: can_play is 1\"] = responseBody.has(\"\\\"can_play\\\":\\\"1\");\n        tests[\"timezone is 8\"] = resp.data.timezone == \"8\";\n        tests[\"channel_id is 1153\"] = resp.data.channel_id == \"1153\";\n        // console.log(GetDateStr(-1));\n        // console.log((new Date()).Format(\"yyyy-MM-dd hh:mm:ss.S\"))\n        if (!resp.data.day && typeof( resp.data.day) !== \"undefined\" &&  resp.data.day !== 0){\n            tests[\"day is not null\"] = resp.data.day;\n        } else{\n            tests[\"day has yesterday\"] = resp.data.day[0].day == GetDateStr(-1);\n            tests[\"day has today\"] = resp.data.day[1].day == GetDateStr(0);\n        }\n    }\n}\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484197306493,
			"name": "获取节目单 1153  真正男子汉  ",
			"description": "获取节目单 1153  真正男子汉 \nhttp://tvosepg.hifuntv.com/v1/epg/turnplay/getLivePlayBill?channel_id=1153&mac_id=00-66-CE-02-E8-2D&net_id=&device_id=ZgOOgo5MjkyOTA2qvwUOS0t2O5V8dg2qIL8gO3u0qnZ7BQ4gmQWqBgaZO6qVlQZ2tKoOjkyOTI5MZgOOgg%3D%3D&&version=4.6.9.200.2.MG.0.0_Pre_Release&uuid=cd9af89b2b2c475b9e379ace3a678547&buss_id=1&license=ZgOOgo5MjkyOTA60SyB8DbSqIKp7eyB8vwVLhzuZdpUGDgWHtL8ge0sOIAa0DnyZBnYNjkyOTI5MZgOOgg%3D%3D",
			"collectionId": "e9a2730e-1f38-216b-4be8-9a59b35d1463"
		},
		{
			"id": "d6bb96ca-43fb-ad13-1109-f370d662d75a",
			"headers": "",
			"url": "http://{{HOST}}/v1/aaa/getFreePlayUrl?index_import_id=3633412&arange=1200&video_index=1&buss_id=1000014&media_asset_id=1&category_id=1&video_id=60adf14f4736be23eca7ba5575c02c85&index_id=43ba31c98207a06c5fb6a16f9f709c11&video_import_id=1&device_id=95d654927d47c6da82b6b6695d9f1a3d2ab40a52&license=ZgOOgo5MjkyOTA2HeyCHtA1LBXu0BTsge5V8S5kgmSAgDYd7Db8Olap7S5WZtAaVh0uqjkyOTI5MZgOOgg%3D%3D&m3u8=2&mac_id=00-66-CE-02-40-69&net_id=&part_id=3633412&platform=3&preview=0&quality=hd&svrip=&ticket=XX6501OVPPAARRHPBFAD&type=3&uuid=c0969ad624812e131ed2026cf31aa50f&version=5.0.008.200.2.MG.0.0_Pre_Release",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code: Code is 200\"] = responseCode.code == 200;\nvar contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");\ntests[\"Has Content-Type\"] = contentTypeHeaderExists;\nif (contentTypeHeaderExists) {\n    tests[\"Content-Type is application/json\"] = \n      responseHeaders[\"Content-Type\"].has(\"application/json\");\n}\nif (responseCode.code == 200){\n    tests[\"response: errno is \\\\0\"] = responseBody.has(\"\\\"errno\\\":\\\"0\\\"\");\n    tests[\"response: url is not empty\"] = responseBody.has(\"\\\"url\\\":\\\"http://\");\n    var resp = JSON.parse(responseBody)\n    tests[\"response: errno is 0\"] = resp.errno == \"0\";\n    //  时间戳\n    var timestamp =  Date.parse(new Date())/1000\n    var sec = postman.getEnvironmentVariable(\"SECONDS\")\n    tests[\"have server_time\"] = resp.server_time <= timestamp + sec && resp.server_time >= timestamp - sec;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484196205285,
			"name": "TVOS试看",
			"description": "TVOS试看 \nhttp://tvosepg.hifuntv.com/v1/aaa/getFreePlayUrl?index_import_id=3633412&arange=1200&video_index=1&buss_id=1000014&media_asset_id=1&category_id=1&video_id=60adf14f4736be23eca7ba5575c02c85&index_id=43ba31c98207a06c5fb6a16f9f709c11&video_import_id=1&device_id=95d654927d47c6da82b6b6695d9f1a3d2ab40a52&license=ZgOOgo5MjkyOTA2HeyCHtA1LBXu0BTsge5V8S5kgmSAgDYd7Db8Olap7S5WZtAaVh0uqjkyOTI5MZgOOgg%3D%3D&m3u8=2&mac_id=00-66-CE-02-40-69&net_id=&part_id=3633412&platform=3&preview=0&quality=hd&svrip=&ticket=XX6501OVPPAARRHPBFAD&type=3&uuid=c0969ad624812e131ed2026cf31aa50f&version=5.0.008.200.2.MG.0.0_Pre_Release",
			"collectionId": "e9a2730e-1f38-216b-4be8-9a59b35d1463"
		},
		{
			"id": "d7f65981-33ed-4155-1884-cd341e94a2d0",
			"headers": "",
			"url": "http://{{HOST}}/v1/epg/turnplay/getLivePlayUrlMPP?version=PCweb_1.0&platform=4&buss_id=2000001&channel_id=965&definition=sd&ticket=14401PQVILBCBNCXCFF8",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code: Code is 200\"] = responseCode.code == 200;\nvar contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");\ntests[\"Has Content-Type\"] = contentTypeHeaderExists;\nif (contentTypeHeaderExists) {\n    tests[\"Content-Type is application/json\"] = \n      responseHeaders[\"Content-Type\"].has(\"application/json\");\n}\nif (responseCode.code == 200){\n    var resp = JSON.parse(responseBody)\n    tests[\"response: errno is \\\\2040341\"] = responseBody.has(\"\\\"errno\\\":\\\"2040341\\\"\");\n    tests[\"response: errno is 2040341\"] = resp.errno == \"2040341\";\n    //  时间戳\n    var timestamp =  Date.parse(new Date())/1000\n    var sec = postman.getEnvironmentVariable(\"SECONDS\")\n    tests[\"have server_time\"] = resp.server_time <= timestamp + sec && resp.server_time >= timestamp - sec;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484197380029,
			"name": "MPP 非VIP用户看VIP频道",
			"description": "http://tvosepg.hifuntv.com/v1/epg/turnplay/getLivePlayUrlMPP?version=PCweb_1.0&platform=4&buss_id=2000001&channel_id=965&definition=sd&ticket=14401PQVILBCBNCXCFF8",
			"collectionId": "e9a2730e-1f38-216b-4be8-9a59b35d1463"
		},
		{
			"id": "df3437b3-13af-1e41-342d-c69599f76111",
			"headers": "",
			"url": "http://{{HOST}}/v1/epg5/getVodPlayUrl?part_id=3352843&ticket=3653IQPVNYEEIKLZ66D8&mac_id=00-66-CE-02-E8-2D&device_id=ZgOOgo5MjkyOTA2qvwUOS0t2O5V8dg2qIL8gO3u0qnZ7BQ4gmQWqBgaZO6qVlQZ2tKoOjkyOTI5MZgOOgg%3D%3D&version=4.6.9.200.2.MG.0.0_Pre_Release&uuid=cd9af89b2b2c475b9e379ace3a678547&license=ZgOOgo5MjkyOTA60SyB8DbSqIKp7eyB8vwVLhzuZdpUGDgWHtL8ge0sOIAa0DnyZBnYNjkyOTI5MZgOOgg%3D%3D&dcp_id=2&quality=1&quality=1",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code: Code is 200\"] = responseCode.code == 200;\nvar contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");\ntests[\"Has Content-Type\"] = contentTypeHeaderExists;\nif (contentTypeHeaderExists) {\n    tests[\"Content-Type is application/json\"] = \n      responseHeaders[\"Content-Type\"].has(\"application/json\");\n}\nif (responseCode.code == 200){\n    tests[\"response: errno is \\\\2040341\"] = responseBody.has(\"\\\"errno\\\":\\\"2040341\\\"\");\n    var resp = JSON.parse(responseBody)\n    tests[\"response: errno is 2040341\"] = resp.errno == \"2040341\";\n    //  时间戳\n    var timestamp =  Date.parse(new Date())/1000\n    var sec = postman.getEnvironmentVariable(\"SECONDS\")\n    tests[\"have server_time\"] = resp.server_time <= timestamp + sec && resp.server_time >= timestamp - sec;\n    if (resp.data) {\n        tests[\"type is refuse\"] = resp.data.type == \"refuse\"\n        tests[\"response: product_list is not empty\"] = responseBody.has(\"\\\"product_list\\\":[\");\n    }\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484196877128,
			"name": "1905 vip 媒资 百鸟朝凤",
			"description": "1905 vip 媒资 百鸟朝凤\nhttp://tvosepg.hifuntv.com/v1/epg5/getVodPlayUrl?part_id=3352843&ticket=7932JYNVATDSKOELFFBF&mac_id=00-66-CE-02-E8-2D&device_id=ZgOOgo5MjkyOTA2qvwUOS0t2O5V8dg2qIL8gO3u0qnZ7BQ4gmQWqBgaZO6qVlQZ2tKoOjkyOTI5MZgOOgg%3D%3D&version=4.6.9.200.2.MG.0.0_Pre_Release&uuid=cd9af89b2b2c475b9e379ace3a678547&license=ZgOOgo5MjkyOTA60SyB8DbSqIKp7eyB8vwVLhzuZdpUGDgWHtL8ge0sOIAa0DnyZBnYNjkyOTI5MZgOOgg%3D%3D&dcp_id=2&quality=1&quality=1",
			"collectionId": "e9a2730e-1f38-216b-4be8-9a59b35d1463"
		},
		{
			"id": "e13d13ec-2453-e659-59c1-3d4141d1178e",
			"headers": "",
			"url": "http://{{HOST}}/v1/epg5/getVodPlayUrl?m3u8=2&chip_type=2&part_id=3342285&platform=3&buss_id=1000014&device_id=95d654927d47c6da82b6b6695d9f1a3d2ab40a52&dcp_id=0&net_id=&type=3&version=5.0.008.200.2.MG.0.0_Pre_Release&preview=0&ticket=7754H5MVEFAEHHEU9EBF&svrip=&quality=2&mac_id=00-66-CE-02-40-69&uuid=c0969ad624812e131ed2026cf31aa50f&license=ZgOOgo5MjkyOTA2HeyCHtA1LBXu0BTsge5V8S5kgmSAgDYd7Db8Olap7S5WZtAaVh0uqjkyOTI5MZgOOgg%3D%3D",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code: Code is 200\"] = responseCode.code == 200;\nvar contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");\ntests[\"Has Content-Type\"] = contentTypeHeaderExists;\nif (contentTypeHeaderExists) {\n    tests[\"Content-Type is application/json\"] = \n      responseHeaders[\"Content-Type\"].has(\"application/json\");\n}\nif (responseCode.code == 200){\n    tests[\"response: errno is 0\"] = responseBody.has(\"\\\"errno\\\":\\\"0\\\"\");\n    var resp = JSON.parse(responseBody)\n    tests[\"response: errno is 0\"] = resp.errno == \"0\";\n    //  时间戳\n    var timestamp =  Date.parse(new Date())/1000\n    var sec = postman.getEnvironmentVariable(\"SECONDS\")\n    tests[\"have server_time and in 60s\"] = resp.server_time <= timestamp + sec && resp.server_time >= timestamp - sec;\n    \n    if (resp.errno == \"0\"){\n        tests[\"response: url is not empty\"] = responseBody.has(\"\\\"url\\\":\\\"http://\");\n        tests[\"isothercdn not empty\"] = resp.data.isothercdn !== \"\"\n    }\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484196894721,
			"name": "点播取串 青云志",
			"description": "点播取串 青云志\n\nhttp://tvosepg.hifuntv.com/v1/epg5/getVodPlayUrl?m3u8=2&chip_type=2&part_id=3342285&platform=3&buss_id=1000014&device_id=95d654927d47c6da82b6b6695d9f1a3d2ab40a52&dcp_id=0&net_id=&type=3&version=5.0.008.200.2.MG.0.0_Pre_Release&preview=0&ticket=7754H5MVEFAEHHEU9EBF&svrip=&quality=2&mac_id=00-66-CE-02-40-69&uuid=c0969ad624812e131ed2026cf31aa50f&license=ZgOOgo5MjkyOTA2HeyCHtA1LBXu0BTsge5V8S5kgmSAgDYd7Db8Olap7S5WZtAaVh0uqjkyOTI5MZgOOgg%3D%3D",
			"collectionId": "e9a2730e-1f38-216b-4be8-9a59b35d1463"
		},
		{
			"id": "e685797b-9ff3-eaea-7078-4241ad8c3566",
			"headers": "",
			"url": "http://{{HOST}}/v1/epg/getVideoInfo?mac_id=00-0B-2F-33-7B-00&device_id=7e240de74fb1ed08fa08d38063f6a6a91462a815&version=1.1.1.288.3.TVOS.0.0_Release&uuid=mgtvmac000B2F337B00&buss_id=1000014&license=ZgOOgo5MjkyOTAV2S7QGe3YFtL%2BZDnZ7Bny%2FlQZ8e6p8BiCqvyCVIJUNDrQgS5V8DodLjkyOTI5MZgOOgg%3D%3D&net_id=051001010000055&media_asset_id=music&category_id=1000119&video_id=1fa1b7048eca2685b248929983c7ed08",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code: Code is 200\"] = responseCode.code == 200;\nif (responseCode.code == 200){\n    var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");\n    tests[\"Has Content-Type\"] = contentTypeHeaderExists;\n    if (contentTypeHeaderExists) {\n        tests[\"Content-Type is application/json\"] = \n          responseHeaders[\"Content-Type\"].has(\"application/json\");\n    }\n    var resp = JSON.parse(responseBody)\n    tests[\"response: errno is 0\"] = resp.errno == \"0\";\n    //  时间戳\n    var timestamp =  Date.parse(new Date())/1000\n    var sec = postman.getEnvironmentVariable(\"SECONDS\")\n    tests[\"have server_time\"] = resp.server_time <= timestamp + sec && resp.server_time >= timestamp - sec;\n}\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484195583297,
			"name": "getVideoInfo",
			"description": "http://tvosepg.hifuntv.com/v1/epg/getVideoInfo?mac_id=00-0B-2F-33-7B-00&device_id=7e240de74fb1ed08fa08d38063f6a6a91462a815&version=1.1.1.288.3.TVOS.0.0_Release&uuid=mgtvmac000B2F337B00&buss_id=1000014&license=ZgOOgo5MjkyOTAV2S7QGe3YFtL%2BZDnZ7Bny%2FlQZ8e6p8BiCqvyCVIJUNDrQgS5V8DodLjkyOTI5MZgOOgg%3D%3D&net_id=051001010000055&media_asset_id=music&category_id=1000119&video_id=1fa1b7048eca2685b248929983c7ed08",
			"collectionId": "e9a2730e-1f38-216b-4be8-9a59b35d1463",
			"responses": []
		}
	]
}